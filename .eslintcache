[{"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\index.js":"1","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\App.js":"2","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\reportWebVitals.js":"3","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Login.js":"4","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Dashboard.js":"5","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Register.js":"6","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\App.js":"7","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Navbar.js":"8"},{"size":925,"mtime":1614190177372,"results":"9","hashOfConfig":"10"},{"size":571,"mtime":1614190169325,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1614189518226,"results":"12","hashOfConfig":"10"},{"size":2739,"mtime":1614306874594,"results":"13","hashOfConfig":"10"},{"size":408,"mtime":1614190121629,"results":"14","hashOfConfig":"10"},{"size":6769,"mtime":1614192588843,"results":"15","hashOfConfig":"10"},{"size":1345,"mtime":1614306039278,"results":"16","hashOfConfig":"10"},{"size":2009,"mtime":1614306451693,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"wjvfq2",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\index.js",["41"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport Login from './Components/Login'\r\nimport Register from './Components/Register'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Dashboard from './Components/Dashboard';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Route path = \"/\" exact component = {App}/>\r\n    <Route path = \"/Login\" exact component = {App}/>\r\n    <Route path = \"/Register\" exact component = {Register}/>\r\n    <Route path = \"/Home\" exact component = {Dashboard}/>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["42","43"],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\App.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\reportWebVitals.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Login.js",["44","45","46","47","48"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Link, { Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport '../Styles/Custom.scss'\r\nimport Register from './Register'\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userID: \"\",\r\n            password: \"\",\r\n            message: \"\",\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let newUserID = this.state.userID\r\n        let newPassword = this.state.password\r\n        if (event.target.name === \"userID\"){\r\n            newUserID = event.target.value\r\n        }\r\n        else if (event.target.name === \"password\") {\r\n            newPassword = event.target.value\r\n        }\r\n        this.setState({\r\n            userID: newUserID,\r\n            password: newPassword,\r\n            message: \"\"  \r\n        });\r\n        \r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n        this.setState({\r\n            userID: this.state.userID,\r\n            password: this.state.password,\r\n        });\r\n\r\n        this.props.Login({userID: this.state.userID, password: this.state.password})\r\n               \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div id=\"loginContainer\">\r\n                <h1>Login</h1>\r\n                <Form className = \"loginForm\" id = \"login\" onSubmit = {this.handleSubmit}>\r\n                    <Form.Group controlid = \"userIDForm\" >\r\n                        <Form.Label className = \"label1\">Username</Form.Label>\r\n                        <Form.Control type = \"text\" name = \"userID\" placeholder = \"Enter username\" className = \"input1\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlid = \"passForm\">\r\n                        <Form.Label className = \"label1\">Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" placeholder = \"Enter password\" className = \"input1\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.message}</Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group className = \"btn1\">\r\n                        <Button variant = \"primary\" type = \"submit\" >Login</Button>\r\n                        <Button href='/Register' variant = \"primary\" className = \"link1\">Register an Account</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Dashboard.js",["49"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userID: this.props.user\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Welcome, {this.state.userID}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Register.js",["50"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport '../Styles/Custom.scss'\r\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nconst API = 'http://localhost:8080'\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            input: {},\r\n            errors: {}\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount () {\r\n        let input = this.state.input\r\n        input[\"filingStatus\"] = document.getElementById(\"filingStatus\").value\r\n        console.log(input[\"filingStatus\"])\r\n        this.setState({input:input, errors:this.state.errors})\r\n    }\r\n\r\n    handleChange(event) {\r\n        let input = this.state.input;\r\n        input[event.target.name] = event.target.value;\r\n      \r\n        this.setState({\r\n          input:input,\r\n          errors: this.state.errors\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(this.state);\r\n        event.preventDefault();\r\n        if (this.validate()) {\r\n            console.log(\"registering...\")\r\n            axios.post(API + '/users/register', {\r\n                userID: \"\",\r\n                email: this.state.input[\"email\"],\r\n                password: this.state.input[\"password\"],\r\n                fname: this.state.input[\"fname\"],\r\n                lname: this.state.input[\"lname\"],\r\n                userType: \"customer\",\r\n                dob: this.state.input[\"dob\"],\r\n                annIncome: this.state.input[\"annualIncome\"],\r\n                filingStatus: this.state.input[\"filingStatus\"]\r\n            }).then((response) => \r\n                console.log(response.data))\r\n           \r\n        }\r\n    }      \r\n    \r\n    \r\n    validate() {\r\n        \r\n        let valid = true;\r\n        let input = this.state.input;\r\n        let errors = this.state.errors;\r\n \r\n        if(input[\"password\"] !== input[\"confirmPassword\"]){\r\n                errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmPassword\"] = \"\";\r\n        }\r\n        if(input[\"email\"] !== input[\"confirmEmail\"]){\r\n                errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmEmail\"] = \"\";\r\n        }\r\n        if(input[\"filingStatus\"] === \"\" || input[\"filingStatus\"] === null){\r\n            errors[\"filingStatus\"] = \"Please select a filing status.\"\r\n        }\r\n        this.setState({errors:errors});\r\n        return valid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n        <div id=\"registerContainer\">\r\n            <h1>Create an Account</h1>\r\n            <Form onSubmit = {this.handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFName\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"fname\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridLName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"lname\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formEmail\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type = \"email\" name = \"email\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmEmail}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm Email Address</Form.Label>\r\n                        <Form.Control type = \"email\"  name = \"confirmEmail\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                    \r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formPassword\">\r\n                        <Form.Label>Create a Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmPassword}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"confirmPassword\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBirthday\">\r\n                        <Form.Label>Birthday</Form.Label>\r\n                        <Form.Control type = \"date\" name = \"dob\" onChange = {this.handleChange} required />     \r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formFilingStatus\">\r\n                    <Form.Label>Filing Status</Form.Label>\r\n                    <Form.Control as=\"select\"  name = \"filingStatus\" id = \"filingStatus\" onChange = {this.handleChange} required>\r\n                        <option>Single</option>\r\n                        <option>Married filing jointly</option>\r\n                        <option>Married filing seperately</option>\r\n                        <option>Head of household</option>\r\n                    </Form.Control>\r\n                    <Form.Text className = \"confirmPass\">{this.state.errors.filingStatus}</Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formAnnualIncome\"  required>\r\n                    <Form.Label>Annual Income</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type = \"number\" min={0} name = \"annualIncome\" onChange = {this.handleChange} />\r\n                    </InputGroup>\r\n                    \r\n                    </Form.Group>               \r\n                </Form.Row>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Register;","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\App.js",["51","52"],"import '../Styles/Custom.scss'\r\nimport { useState } from 'react';\r\nimport Dashboard from './Dashboard';\r\nimport Navbar from './Navbar'\r\nimport Login from './Login';\r\nimport axios from 'axios'\r\n\r\n\r\nconst API = 'http://localhost:8080'\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState(\"\")\r\n\r\n  const logout = () => {\r\n    setUser(\"\");\r\n  }\r\n\r\n  const loggedIn = credentials => {\r\n\r\n    axios.post(API + '/users/authenticate', {\r\n              userID: credentials.userID,\r\n              password: credentials.password\r\n          })\r\n          .then((response) => {\r\n              let newLoggedIn = false;\r\n              console.log(response);\r\n\r\n              if (response.data === \"Permission Granted\") {\r\n                  console.log(\"logged in\");\r\n                  newLoggedIn = true;\r\n                  console.log(\"poop\");\r\n                  setUser(credentials.userID)\r\n                  console.log(user)\r\n                  console.log(credentials.userID)\r\n                  \r\n              }\r\n              \r\n              \r\n\r\n                 \r\n          });\r\n         \r\n          \r\n  }\r\n      \r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar loggedIn = {(user != \"\")} logout = {logout}/>\r\n      {user === \"\" ? <Login Login = {loggedIn}/> : <Dashboard user = {user} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Navbar.js",["53","54","55","56","57"],"import React from 'react'\r\nimport logoutIcon from './Images/logout-icon.svg'\r\nimport moneyIcon from './Images/money.svg'\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.props.logout()\r\n    }\r\n\r\n    render(){\r\n        if (this.props.loggedIn === true) {\r\n            return (\r\n                \r\n                <div>\r\n                    <nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                        <a class=\"navbar-brand\" style = {{color: \"white\"}} >Where's My Money?\r\n                        <img src={moneyIcon} style = {{height: 30, width: 40}}></img>\r\n                        </a>\r\n                    \r\n                        <div class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                            <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                                <li class=\"nav-item active\">\r\n                                    <a class=\"nav-link\" href=\"#\"> Add Expense </a>\r\n                                </li>\r\n                                <li class=\"nav-item active\">\r\n                                    <a class=\"nav-link\" href=\"#\"> Manage Expenses</a>\r\n                                </li>         \r\n                            </ul>\r\n                            <form class=\"form-inline my-2 my-lg-0\">\r\n                                \r\n                                <button class=\"btn\" style = {{color: \"white\"}} onSubmit = {this.handleSubmit} >\r\n                                        Logout <span ><img src={logoutIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                </button>\r\n                            \r\n                            </form>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n        \r\n}\r\n}\r\nexport default Navbar\r\n\r\n\r\n",{"ruleId":"58","severity":1,"message":"59","line":6,"column":8,"nodeType":"60","messageId":"61","endLine":6,"endColumn":13},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"58","severity":1,"message":"66","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":16},{"ruleId":"58","severity":1,"message":"67","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":12},{"ruleId":"58","severity":1,"message":"68","line":3,"column":16,"nodeType":"60","messageId":"61","endLine":3,"endColumn":24},{"ruleId":"58","severity":1,"message":"69","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":13},{"ruleId":"58","severity":1,"message":"70","line":6,"column":8,"nodeType":"60","messageId":"61","endLine":6,"endColumn":16},{"ruleId":"58","severity":1,"message":"66","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":16},{"ruleId":"58","severity":1,"message":"66","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":16},{"ruleId":"58","severity":1,"message":"71","line":33,"column":19,"nodeType":"60","messageId":"61","endLine":33,"endColumn":30},{"ruleId":"72","severity":1,"message":"73","line":53,"column":33,"nodeType":"74","messageId":"75","endLine":53,"endColumn":35},{"ruleId":"76","severity":1,"message":"77","line":22,"column":25,"nodeType":"78","endLine":22,"endColumn":77},{"ruleId":"79","severity":1,"message":"80","line":23,"column":25,"nodeType":"78","endLine":23,"endColumn":80},{"ruleId":"76","severity":1,"message":"81","line":29,"column":37,"nodeType":"78","endLine":29,"endColumn":66},{"ruleId":"76","severity":1,"message":"81","line":32,"column":37,"nodeType":"78","endLine":32,"endColumn":66},{"ruleId":"79","severity":1,"message":"80","line":38,"column":55,"nodeType":"78","endLine":38,"endColumn":111},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"'ReactDOM' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'axios' is defined but never used.","'Register' is defined but never used.","'newLoggedIn' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]