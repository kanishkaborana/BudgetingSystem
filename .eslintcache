[{"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\index.js":"1","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\App.js":"2","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\reportWebVitals.js":"3","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Login.js":"4","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Dashboard.js":"5","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Register.js":"6","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\App.js":"7","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Navbar.js":"8","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\LoadingPage.js":"9","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Profile.js":"10","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\config.js":"11","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AdminNavbar.js":"12","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AddUser.js":"13","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AddExpense.js":"14"},{"size":1491,"mtime":1617396610850,"results":"15","hashOfConfig":"16"},{"size":571,"mtime":1614190169325,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1614189518226,"results":"18","hashOfConfig":"16"},{"size":2691,"mtime":1614568090398,"results":"19","hashOfConfig":"16"},{"size":3656,"mtime":1616720246319,"results":"20","hashOfConfig":"16"},{"size":8679,"mtime":1614814374612,"results":"21","hashOfConfig":"16"},{"size":2010,"mtime":1616712301780,"results":"22","hashOfConfig":"16"},{"size":3014,"mtime":1617396553436,"results":"23","hashOfConfig":"16"},{"size":420,"mtime":1614812319597,"results":"24","hashOfConfig":"16"},{"size":10328,"mtime":1617397801614,"results":"25","hashOfConfig":"16"},{"size":179,"mtime":1614822442100,"results":"26","hashOfConfig":"16"},{"size":3079,"mtime":1617138842134,"results":"27","hashOfConfig":"16"},{"size":12152,"mtime":1617145517995,"results":"28","hashOfConfig":"16"},{"size":5631,"mtime":1617397435759,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wjvfq2",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\index.js",["65"],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\App.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\reportWebVitals.js",[],["66","67"],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Login.js",["68","69","70","71","72"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Link, { Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport '../Styles/Custom.scss'\r\nimport Register from './Register'\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userID: \"\",\r\n            password: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let newUserID = this.state.userID\r\n        let newPassword = this.state.password\r\n        if (event.target.name === \"userID\"){\r\n            newUserID = event.target.value\r\n        }\r\n        else if (event.target.name === \"password\") {\r\n            newPassword = event.target.value\r\n        }\r\n        this.setState({\r\n            userID: newUserID,\r\n            password: newPassword\r\n        });\r\n        \r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n        this.setState({\r\n            userID: this.state.userID,\r\n            password: this.state.password\r\n        });\r\n\r\n        this.props.Login({userID: this.state.userID, password: this.state.password})\r\n       \r\n               \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div id=\"loginContainer\">\r\n                <h1>Login</h1>\r\n                <Form className = \"loginForm\" id = \"login\" onSubmit = {this.handleSubmit}>\r\n                    <Form.Group controlid = \"userIDForm\" >\r\n                        <Form.Label className = \"label1\">Username</Form.Label>\r\n                        <Form.Control type = \"text\" name = \"userID\" placeholder = \"Enter username\" className = \"input1\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlid = \"passForm\">\r\n                        <Form.Label className = \"label1\">Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" placeholder = \"Enter password\" className = \"input1\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.props.errors}</Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group className = \"btn1\">\r\n                        <Button variant = \"primary\" type = \"submit\" >Login</Button>\r\n                        <Button href='/Register' variant = \"primary\" className = \"link1\">Register an Account</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Dashboard.js",["73"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Navbar from './Navbar'\r\nimport AdminNavbar from './AdminNavbar'\r\nimport axios from 'axios'\r\nimport {API_URL_USERS } from '../config'\r\nimport {Table} from 'react-bootstrap'\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userID: this.props.location.state[\"user\"],\r\n            userType: this.props.location.state[\"userType\"],\r\n            customers: [{}]\r\n        }\r\n        this.getCustomersTable = this.getCustomersTable.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(API_URL_USERS)\r\n        .then((response) => {\r\n            this.setState({customers: response.data})\r\n            console.log((this.state.customers[0]))\r\n        })\r\n    }\r\n\r\n    handleDelete() {\r\n        \r\n    }\r\n\r\n    getCustomersTable() {\r\n        console.log((this.state.customers[0]).dob)\r\n            //console.log(\"hi\" + (this.state.customers[0])['userID'])\r\n            return (\r\n                <div>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>UserID</th>\r\n                                        <th>Email</th>\r\n                                        <th>First Name</th>\r\n                                        <th>Last Name</th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {(this.state.customers).map(element => {\r\n                                        console.log(element.userID)\r\n                                        return(\r\n                                        <tr>\r\n                                            <td>{element.userID}</td>\r\n                                            <td>{element.email}</td>\r\n                                            <td>{element.fname}</td>\r\n                                            <td>{element.lname}</td>\r\n                                            <td><button type=\"button\" name=\"\" id=\"\" class=\"btn btn-primary\" btn-lg btn-block>Edit</button></td>\r\n                                            <td><button type=\"button\" name=\"\" id=\"\" class=\"btn btn-primary\" btn-lg btn-block onClick = {this.handleDelete()}>Delete</button></td>\r\n                                        </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                        </Table>\r\n                </div>\r\n                )\r\n            }\r\n    \r\n\r\n    render() {\r\n        //console.log(this.state)\r\n        const table = this.getCustomersTable()\r\n        return (\r\n            <div>\r\n                \r\n                {this.state.userType === \"customer\" ?\r\n                    <div>\r\n                        <Navbar user = {this.state.userID} userType = {this.state.userType}/>\r\n                        Welcome, {this.state.userID}\r\n                    </div>\r\n                : <div>\r\n                    <AdminNavbar user = {this.state.userID} userType = {this.state.userType}/>\r\n                    Welcome, {this.state.userID}<br></br>\r\n                    CUSTOMERS:<br></br>\r\n                    {table}\r\n                    \r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Register.js",["74","75"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport '../Styles/Custom.scss'\r\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\n\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            registered: false,\r\n            input: {},\r\n            errors: {}\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount () {\r\n        let input = this.state.input\r\n        input[\"filingStatus\"] = document.getElementById(\"filingStatus\").value\r\n        console.log(input[\"filingStatus\"])\r\n        this.setState({registered: false, input:input, errors:this.state.errors})\r\n    }\r\n\r\n    handleChange(event) {\r\n        let input = this.state.input;\r\n        input[event.target.name] = event.target.value;\r\n      \r\n        this.setState({\r\n            registered: false,\r\n            input:input,\r\n            errors: this.state.errors\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(this.state);\r\n        event.preventDefault();\r\n        if (this.validate()) {\r\n            console.log(\"registering...\")\r\n            axios.post(API_URL + '/users/register', {\r\n                userID: this.state.input.username,\r\n                email: this.state.input[\"email\"],\r\n                password: this.state.input[\"password\"],\r\n                fname: this.state.input[\"fname\"],\r\n                lname: this.state.input[\"lname\"],\r\n                userType: \"customer\",\r\n                dob: this.state.input[\"dob\"],\r\n                annIncome: this.state.input[\"annualIncome\"],\r\n                filingStatus: this.state.input[\"filingStatus\"]\r\n            }).then((response) => {\r\n                console.log(response.data)\r\n                if (response.data === 'User exists') { \r\n                    this.state.errors.usernameExists = \"Username exists, try a different one.\"\r\n                \r\n                    this.setState( {\r\n                        registered: false,\r\n                        input: this.state.input,\r\n                        errors: this.state.errors\r\n                    } ) \r\n                }\r\n                else {\r\n                    this.setState ({registered: true, input : {}, errors : {}})\r\n                }\r\n            \r\n            }\r\n            )\r\n            \r\n        }\r\n        console.log(this.state.registered)\r\n    }      \r\n    \r\n    \r\n    validate() {\r\n        \r\n        let valid = true;\r\n        let input = this.state.input;\r\n        let errors = this.state.errors;\r\n        let dob = new Date(input[\"dob\"])\r\n        let today = new Date()\r\n        if(input[\"password\"] !== input[\"confirmPassword\"]){\r\n                errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmPassword\"] = \"\";\r\n        }\r\n        if(input[\"email\"] !== input[\"confirmEmail\"]){\r\n                errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmEmail\"] = \"\";\r\n        }\r\n        if(input[\"filingStatus\"] === \"\" || input[\"filingStatus\"] === null){\r\n            errors[\"filingStatus\"] = \"Please select a filing status.\"\r\n        }\r\n        if (dob > today){\r\n            errors[\"birthdayError\"] = \"Birthday cannot be a future date.\"\r\n        }\r\n        else {\r\n            errors[\"birthdayError\"] = \"\"\r\n        }\r\n    \r\n        this.setState({errors:errors});\r\n        return valid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n        <div id=\"registerContainer\">\r\n            {this.state.registered && (<Redirect to=\"/Register/Success\"/>)}\r\n            <h1>Create an Account</h1>\r\n            <Form onSubmit = {this.handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFName\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"fname\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridLName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"lname\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formEmail\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type = \"email\" name = \"email\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmEmail}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm Email Address</Form.Label>\r\n                        <Form.Control type = \"email\"  name = \"confirmEmail\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type = \"text\" name = \"username\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"usernameExists\">{this.state.errors.usernameExists}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formPassword\">\r\n                        <Form.Label>Create a Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmPassword}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"confirmPassword\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBirthday\">\r\n                        <Form.Label>Birthday</Form.Label>\r\n                        \r\n                        <Form.Control type = \"date\" name = \"dob\"  onChange = {this.handleChange} required />\r\n                        <Form.Text className = \"birthdayValidate\">{this.state.errors.birthdayError}</Form.Text>     \r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formFilingStatus\">\r\n                    <Form.Label>Filing Status</Form.Label>\r\n                    <Form.Control as=\"select\"  name = \"filingStatus\" id = \"filingStatus\" onChange = {this.handleChange} required>\r\n                        <option>Single</option>\r\n                        <option>Married filing jointly</option>\r\n                        <option>Married filing seperately</option>\r\n                        <option>Head of household</option>\r\n                    </Form.Control>\r\n                    <Form.Text className = \"confirmPass\">{this.state.errors.filingStatus}</Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formAnnualIncome\"  required>\r\n                    <Form.Label>Annual Income</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type = \"number\" min={0} name = \"annualIncome\" onChange = {this.handleChange} />\r\n                    </InputGroup>\r\n                    \r\n                    </Form.Group>               \r\n                </Form.Row>\r\n                <Form.Group className = \"btn1\">\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                    <Button href='/' variant = \"primary\" className = \"link1\">Return to Login</Button>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Register;","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\App.js",["76","77","78","79"],"import '../Styles/Custom.scss'\r\nimport { useState } from 'react';\r\nimport Dashboard from './Dashboard';\r\nimport Navbar from './Navbar'\r\nimport Login from './Login';\r\nimport axios from 'axios'\r\nimport { Redirect, Link} from 'react-router-dom'\r\nimport { API_URL} from '../config'\r\n\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState(\"\")\r\n  const [loginErrors, setErrors] = useState(\"\")\r\n  const [userType, setUserType] = useState(\"\")\r\n\r\n  const logout = () => {\r\n    setUser(\"\");\r\n    <Link to =\"\"/>\r\n  }\r\n\r\n  const loggedIn = credentials => {\r\n\r\n    axios.post(API_URL + '/users/authenticate', {\r\n              userID: credentials.userID,\r\n              password: credentials.password\r\n          })\r\n          .then((response) => {\r\n              let newLoggedIn = false;\r\n              console.log(response.data);\r\n\r\n              if (response.data === \"Customer Permission Granted\") {\r\n                setUserType(\"customer\")\r\n                console.log(\"logged in\");\r\n                newLoggedIn = true;\r\n                console.log(\"poop\");\r\n                setUser(credentials.userID)\r\n                console.log(user)\r\n                console.log(credentials.userID)\r\n                  \r\n              }\r\n              else if (response.data === \"Admin Permission Granted\") {\r\n                setUserType(\"admin\")\r\n                console.log(\"logged in\");\r\n                newLoggedIn = true;\r\n                console.log(\"poop\");\r\n                setUser(credentials.userID)\r\n                console.log(user)\r\n                console.log(credentials.userID)\r\n                  \r\n              }\r\n              else\r\n                setErrors(response.data)\r\n              \r\n\r\n                 \r\n          });\r\n         \r\n          \r\n  }\r\n      \r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {user === \"\" ? <Login Login = {loggedIn} errors = {loginErrors}/> : <Redirect to= {{pathname: '/Dashboard', state: {user: user, userType: userType}}}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Navbar.js",["80","81","82","83","84","85","86","87","88"],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\LoadingPage.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Profile.js",["89"],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\config.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AdminNavbar.js",["90","91","92","93","94","95","96","97","98"],"import React from 'react'\r\nimport logoutIcon from './Images/logout-icon.svg'\r\nimport moneyIcon from './Images/money.svg'\r\nimport plusIcon from './Images/plus-icon.svg'\r\nimport profileIcon from './Images/profile-icon.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass AdminNavbar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n       \r\n            return (\r\n                \r\n                <div>\r\n                    <nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                        <Link to = {{pathname: '/Dashboard', state: {user: this.props.user, userType: this.props.userType}}}>\r\n                            <a class=\"navbar-brand\" style = {{color: \"white\"}}>Where's My Money?\r\n                            <img src={moneyIcon} style = {{height: 30, width: 40}}></img>\r\n                            </a>\r\n                        </Link>\r\n                    \r\n                        <div class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                            <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                                <li class=\"nav-item active\">\r\n                                    <Link to = {{pathname: '/AddUser/', state: {user: this.props.user, userType: this.props.userType}}}>\r\n                                        <a class = 'nav-link' style = {{color: \"white\"}}>\r\n                                        Add User <span ><img src={plusIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                        </a>\r\n                                    </Link>\r\n                                </li>\r\n                                <li class=\"nav-item active\">\r\n                                    <Link to = {{pathname: '/Profile/' + this.props.user, state: {userType: this.props.userType}}}>\r\n                                        <a class = 'nav-link' style = {{color: \"white\"}}>\r\n                                        Profile <span ><img src={profileIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                        </a>\r\n                                    </Link>\r\n                                </li>           \r\n                            </ul>\r\n                            <form class=\"form-inline my-2 my-lg-0\">\r\n                                <Link to = ''>\r\n                                    <a class = 'nav-item active' style = {{color: \"white\"}}>\r\n                                    Logout <span ><img src={logoutIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                    </a>\r\n                                </Link>\r\n                                {/* <button class=\"btn\" style = {{color: \"white\"}} onSubmit = {this.handleSubmit} >\r\n                                        \r\n                                </button> */}\r\n                            \r\n                            </form>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            )\r\n        \r\n}\r\n}\r\nexport default AdminNavbar\r\n\r\n\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AddUser.js",["99","100","101","102","103","104","105"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport '../Styles/Custom.scss'\r\nimport {Form, Button, Col, InputGroup, ToggleButtonGroup, ToggleButton} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport AdminNavbar from './AdminNavbar'\r\nimport { ThemeConsumer } from 'react-bootstrap/esm/ThemeProvider'\r\n\r\n\r\nclass AddUser extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            registered: false,\r\n            input: {filingStatus: \"Single\"},\r\n            errors: {}\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount () {\r\n        let input = this.state.input\r\n        //input[\"filingStatus\"] = document.getElementById(\"filingStatus\").value\r\n        input[\"userType\"] = \"customer\"\r\n        console.log(input[\"userType\"])\r\n        this.setState({registered: false, input:input, errors:this.state.errors})\r\n    }\r\n\r\n    handleChange(event) {\r\n        let input = this.state.input;\r\n        input[event.target.name] = event.target.value;\r\n        this.setState({\r\n            registered: false,\r\n            input:input,\r\n            errors: this.state.errors\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(this.state);\r\n        event.preventDefault();\r\n        if (this.validate()) {\r\n            console.log(\"registering...\")\r\n            if (this.state.input[\"userType\"] === 'customer') {\r\n                console.log(\"customer...\")\r\n                axios.post(API_URL + '/users/register', {\r\n                    userID: this.state.input.username,\r\n                    email: this.state.input[\"email\"],\r\n                    password: this.state.input[\"password\"],\r\n                    fname: this.state.input[\"fname\"],\r\n                    lname: this.state.input[\"lname\"],\r\n                    userType: this.state.input[\"userType\"],\r\n                    dob: this.state.input[\"dob\"],\r\n                    annIncome: this.state.input[\"annualIncome\"],\r\n                    filingStatus: this.state.input[\"filingStatus\"]\r\n                }).then((response) => {\r\n                    console.log(response.data)\r\n                    \r\n                    if (response.data === 'User exists') { \r\n                        this.state.errors.usernameExists = \"Username exists, try a different one.\"\r\n                        this.state.errors[\"output\"] = response.data\r\n                        this.setState( {\r\n                            registered: false,\r\n                            input: this.state.input,\r\n                            errors: this.state.errors\r\n                        } ) \r\n                    }\r\n                    else {\r\n                        this.setState ({registered: true, input : {filingStatus: \"Single\"}, errors : {output: response.data}})\r\n                    }\r\n                \r\n                }\r\n                )\r\n            }\r\n            else {\r\n                console.log(\"admin....\")\r\n                axios.post(API_URL + '/users/register', {\r\n                    userID: this.state.input.username,\r\n                    email: this.state.input[\"email\"],\r\n                    password: this.state.input[\"password\"],\r\n                    fname: this.state.input[\"fname\"],\r\n                    lname: this.state.input[\"lname\"],\r\n                    userType: this.state.input[\"userType\"],\r\n                    dob: new Date(),\r\n                    annIncome: 0,\r\n                    filingStatus: \"Single\"\r\n                }).then((response) => {\r\n                    console.log(response.data)\r\n                    \r\n                    if (response.data === 'User exists') { \r\n                        this.state.errors.usernameExists = \"Username exists, try a different one.\"\r\n                        this.state.errors[\"output\"] = response.data\r\n                        this.setState( {\r\n                            registered: false,\r\n                            input: this.state.input,\r\n                            errors: this.state.errors\r\n                        } ) \r\n                    }\r\n                    else {\r\n                        this.setState ({registered: true, input : {filingStatus: \"Single\"}, errors : {output: response.data}})\r\n                    }\r\n                \r\n                }\r\n                )\r\n            }\r\n            \r\n        }\r\n        console.log(this.state.registered)\r\n    }      \r\n    \r\n    \r\n    validate() {\r\n        \r\n        let valid = true;\r\n        let input = this.state.input;\r\n        let errors = this.state.errors;\r\n        let dob = new Date(input[\"dob\"])\r\n        let today = new Date()\r\n        if (input[\"userType\"] === 'customer') {\r\n\r\n        \r\n            if(input[\"password\"] !== input[\"confirmPassword\"]){\r\n                    errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                    valid = false;\r\n            }\r\n            else {\r\n                errors[\"confirmPassword\"] = \"\";\r\n            }\r\n            if(input[\"email\"] !== input[\"confirmEmail\"]){\r\n                    errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                    valid = false;\r\n            }\r\n            else {\r\n                errors[\"confirmEmail\"] = \"\";\r\n            }\r\n            if(input[\"filingStatus\"] === \"\" || input[\"filingStatus\"] === null){\r\n                errors[\"filingStatus\"] = \"Please select a filing status.\"\r\n            }\r\n            if (dob > today){\r\n                errors[\"birthdayError\"] = \"Birthday cannot be a future date.\"\r\n            }\r\n            else {\r\n                errors[\"birthdayError\"] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            if(input[\"password\"] !== input[\"confirmPassword\"]){\r\n                errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                valid = false;\r\n            }\r\n            else {\r\n                errors[\"confirmPassword\"] = \"\";\r\n            }\r\n            if(input[\"email\"] !== input[\"confirmEmail\"]){\r\n                    errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                    valid = false;\r\n            }\r\n            else {\r\n                errors[\"confirmEmail\"] = \"\";\r\n            }\r\n        }\r\n    \r\n        this.setState({errors:errors});\r\n        return valid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n        <div >\r\n            <AdminNavbar user = {this.props.location.state[\"user\"]} userType = {this.props.location.state[\"userType\"]}></AdminNavbar>\r\n            <h1>Add User</h1>\r\n            <Form onSubmit = {this.handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFName\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"fname\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridLName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"lname\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formEmail\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type = \"email\" name = \"email\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmEmail}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm Email Address</Form.Label>\r\n                        <Form.Control type = \"email\"  name = \"confirmEmail\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type = \"text\" name = \"username\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"usernameExists\">{this.state.errors.usernameExists}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formPassword\">\r\n                        <Form.Label>Create a Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmPassword}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"confirmPassword\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formUserType\" required>\r\n                        <Form.Label>User Type</Form.Label><br></br>\r\n                        <ToggleButtonGroup name=\"userType\" type=\"radio\" className=\"mb-2\" defaultValue={'customer'}>\r\n                            <ToggleButton value={'customer'} onChange = {this.handleChange} >Customer</ToggleButton>\r\n                            <ToggleButton value={'admin'} onChange = {this.handleChange} >Admin</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                {this.state.input[\"userType\"] === 'customer' ? <div>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBirthday\">\r\n                        <Form.Label>Birthday</Form.Label>\r\n                        \r\n                        <Form.Control type = \"date\" name = \"dob\"  onChange = {this.handleChange} required />\r\n                        <Form.Text className = \"birthdayValidate\">{this.state.errors.birthdayError}</Form.Text>     \r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formFilingStatus\">\r\n                    <Form.Label>Filing Status</Form.Label>\r\n                    <Form.Control as=\"select\"  name = \"filingStatus\" id = \"filingStatus\" onChange = {this.handleChange} required>\r\n                        <option>Single</option>\r\n                        <option>Married filing jointly</option>\r\n                        <option>Married filing seperately</option>\r\n                        <option>Head of household</option>\r\n                    </Form.Control>\r\n                    <Form.Text className = \"confirmPass\">{this.state.errors.filingStatus}</Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formAnnualIncome\"  required>\r\n                    <Form.Label>Annual Income</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type = \"number\" min={0} name = \"annualIncome\" onChange = {this.handleChange} />\r\n                    </InputGroup>\r\n                    \r\n                    </Form.Group>               \r\n                </Form.Row></div>\r\n                : <div></div> }\r\n                \r\n                <Form.Group className = \"btn1\">\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Add User\r\n                    </Button>\r\n                    <Form.Text className = \"output\">{this.state.errors[\"output\"]}</Form.Text>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default AddUser;","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AddExpense.js",["106","107"],{"ruleId":"108","severity":1,"message":"109","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":13},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"108","severity":1,"message":"116","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"117","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":12},{"ruleId":"108","severity":1,"message":"118","line":3,"column":16,"nodeType":"110","messageId":"111","endLine":3,"endColumn":24},{"ruleId":"108","severity":1,"message":"119","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":13},{"ruleId":"108","severity":1,"message":"120","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":16},{"ruleId":"108","severity":1,"message":"116","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"116","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":59,"column":21,"nodeType":"123","endLine":59,"endColumn":38},{"ruleId":"108","severity":1,"message":"124","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":17},{"ruleId":"108","severity":1,"message":"125","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":14},{"ruleId":"108","severity":1,"message":"126","line":17,"column":9,"nodeType":"110","messageId":"111","endLine":17,"endColumn":15},{"ruleId":"108","severity":1,"message":"127","line":45,"column":17,"nodeType":"110","messageId":"111","endLine":45,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":11,"column":5,"nodeType":"130","messageId":"131","endLine":13,"endColumn":6},{"ruleId":"132","severity":1,"message":"133","line":24,"column":29,"nodeType":"134","endLine":24,"endColumn":80},{"ruleId":"135","severity":1,"message":"136","line":25,"column":25,"nodeType":"134","endLine":25,"endColumn":80},{"ruleId":"132","severity":1,"message":"133","line":33,"column":33,"nodeType":"134","endLine":33,"endColumn":84},{"ruleId":"135","severity":1,"message":"136","line":34,"column":33,"nodeType":"134","endLine":34,"endColumn":87},{"ruleId":"132","severity":1,"message":"137","line":38,"column":37,"nodeType":"134","endLine":38,"endColumn":66},{"ruleId":"132","severity":1,"message":"133","line":42,"column":41,"nodeType":"134","endLine":42,"endColumn":90},{"ruleId":"135","severity":1,"message":"136","line":43,"column":56,"nodeType":"134","endLine":43,"endColumn":113},{"ruleId":"135","severity":1,"message":"136","line":50,"column":51,"nodeType":"134","endLine":50,"endColumn":107},{"ruleId":"108","severity":1,"message":"138","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":11,"column":5,"nodeType":"130","messageId":"131","endLine":13,"endColumn":6},{"ruleId":"132","severity":1,"message":"133","line":24,"column":29,"nodeType":"134","endLine":24,"endColumn":80},{"ruleId":"135","severity":1,"message":"136","line":25,"column":29,"nodeType":"134","endLine":25,"endColumn":84},{"ruleId":"132","severity":1,"message":"133","line":33,"column":41,"nodeType":"134","endLine":33,"endColumn":90},{"ruleId":"135","severity":1,"message":"136","line":34,"column":57,"nodeType":"134","endLine":34,"endColumn":111},{"ruleId":"132","severity":1,"message":"133","line":40,"column":41,"nodeType":"134","endLine":40,"endColumn":90},{"ruleId":"135","severity":1,"message":"136","line":41,"column":56,"nodeType":"134","endLine":41,"endColumn":113},{"ruleId":"132","severity":1,"message":"133","line":48,"column":37,"nodeType":"134","endLine":48,"endColumn":93},{"ruleId":"135","severity":1,"message":"136","line":49,"column":51,"nodeType":"134","endLine":49,"endColumn":107},{"ruleId":"108","severity":1,"message":"116","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"118","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":18},{"ruleId":"108","severity":1,"message":"139","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":23},{"ruleId":"121","severity":1,"message":"122","line":64,"column":25,"nodeType":"123","endLine":64,"endColumn":42},{"ruleId":"121","severity":1,"message":"122","line":65,"column":25,"nodeType":"123","endLine":65,"endColumn":42},{"ruleId":"121","severity":1,"message":"122","line":95,"column":25,"nodeType":"123","endLine":95,"endColumn":42},{"ruleId":"121","severity":1,"message":"122","line":96,"column":25,"nodeType":"123","endLine":96,"endColumn":42},{"ruleId":"108","severity":1,"message":"116","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"118","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":18},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","no-native-reassign",["140"],"no-negated-in-lhs",["141"],"'ReactDOM' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'axios' is defined but never used.","'Register' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Dashboard' is defined but never used.","'Navbar' is defined but never used.","'logout' is assigned a value but never used.","'newLoggedIn' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'ThemeConsumer' is defined but never used.","no-global-assign","no-unsafe-negation"]