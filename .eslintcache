[{"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\index.js":"1","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\App.js":"2","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\reportWebVitals.js":"3","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Login.js":"4","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Dashboard.js":"5","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Register.js":"6","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\App.js":"7","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Navbar.js":"8","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\LoadingPage.js":"9","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Profile.js":"10","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\config.js":"11","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AdminNavbar.js":"12","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AddUser.js":"13","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AddExpense.js":"14","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\EditUser.js":"15"},{"size":1770,"mtime":1617658740681,"results":"16","hashOfConfig":"17"},{"size":571,"mtime":1614190169325,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1614189518226,"results":"19","hashOfConfig":"17"},{"size":2691,"mtime":1614568090398,"results":"20","hashOfConfig":"17"},{"size":14067,"mtime":1618781480852,"results":"21","hashOfConfig":"17"},{"size":8735,"mtime":1618778263109,"results":"22","hashOfConfig":"17"},{"size":2010,"mtime":1616712301780,"results":"23","hashOfConfig":"17"},{"size":2940,"mtime":1617656618347,"results":"24","hashOfConfig":"17"},{"size":420,"mtime":1614812319597,"results":"25","hashOfConfig":"17"},{"size":10311,"mtime":1617659814009,"results":"26","hashOfConfig":"17"},{"size":252,"mtime":1617656618348,"results":"27","hashOfConfig":"17"},{"size":3079,"mtime":1617138842134,"results":"28","hashOfConfig":"17"},{"size":12152,"mtime":1617145517995,"results":"29","hashOfConfig":"17"},{"size":6127,"mtime":1618777915137,"results":"30","hashOfConfig":"17"},{"size":7363,"mtime":1617656618346,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"wjvfq2",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"35"},"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\index.js",["71"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport Login from './Components/Login'\r\nimport AddUser from './Components/AddUser'\r\nimport Register from './Components/Register'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Dashboard from './Components/Dashboard';\r\nimport LoadingPage from './Components/LoadingPage';\r\nimport Profile from './Components/Profile'\r\nimport AddExpense from './Components/AddExpense'\r\nimport EditUser from './Components/EditUser'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Route path = \"/\" exact component = {App}/>\r\n    <Route path = \"/AddExpense\" exact component = {AddExpense}/>\r\n    <Route path = \"/AddUser\" exact component = {AddUser}/>\r\n    <Route path = \"/Login\" exact component = {App}/>\r\n    <Route path = \"/Register\" exact component = {Register}/>\r\n    <Route path = \"/Dashboard\" exact component = {Dashboard}/>\r\n    <Route path = \"/Profile/:username\" exact component = {Profile}/>\r\n    <Route path = \"/EditUser\" exact component = {EditUser}/>\r\n    <Route path = \"/Register/Success\" exact render = {(props) => <LoadingPage {...props} status = \"Successfully Registered\" button = \"/\" buttonText = \"Return to login\"/>}/>\r\n    <Route path = \"/AddExpense/Success\" exact render = {(props) => <LoadingPage {...props} status = \"Successfully added\" button = \"/\" buttonText = \"Return to Home\" />}/>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["72","73"],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\App.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\reportWebVitals.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Login.js",["74","75","76","77","78"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Link, { Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport '../Styles/Custom.scss'\r\nimport Register from './Register'\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userID: \"\",\r\n            password: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let newUserID = this.state.userID\r\n        let newPassword = this.state.password\r\n        if (event.target.name === \"userID\"){\r\n            newUserID = event.target.value\r\n        }\r\n        else if (event.target.name === \"password\") {\r\n            newPassword = event.target.value\r\n        }\r\n        this.setState({\r\n            userID: newUserID,\r\n            password: newPassword\r\n        });\r\n        \r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n        this.setState({\r\n            userID: this.state.userID,\r\n            password: this.state.password\r\n        });\r\n\r\n        this.props.Login({userID: this.state.userID, password: this.state.password})\r\n       \r\n               \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div id=\"loginContainer\">\r\n                <h1>Login</h1>\r\n                <Form className = \"loginForm\" id = \"login\" onSubmit = {this.handleSubmit}>\r\n                    <Form.Group controlid = \"userIDForm\" >\r\n                        <Form.Label className = \"label1\">Username</Form.Label>\r\n                        <Form.Control type = \"text\" name = \"userID\" placeholder = \"Enter username\" className = \"input1\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlid = \"passForm\">\r\n                        <Form.Label className = \"label1\">Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" placeholder = \"Enter password\" className = \"input1\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.props.errors}</Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group className = \"btn1\">\r\n                        <Button variant = \"primary\" type = \"submit\" >Login</Button>\r\n                        <Button href='/Register' variant = \"primary\" className = \"link1\">Register an Account</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Dashboard.js",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95"],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Register.js",["96","97"],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\App.js",["98","99","100","101"],"import '../Styles/Custom.scss'\r\nimport { useState } from 'react';\r\nimport Dashboard from './Dashboard';\r\nimport Navbar from './Navbar'\r\nimport Login from './Login';\r\nimport axios from 'axios'\r\nimport { Redirect, Link} from 'react-router-dom'\r\nimport { API_URL} from '../config'\r\n\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState(\"\")\r\n  const [loginErrors, setErrors] = useState(\"\")\r\n  const [userType, setUserType] = useState(\"\")\r\n\r\n  const logout = () => {\r\n    setUser(\"\");\r\n    <Link to =\"\"/>\r\n  }\r\n\r\n  const loggedIn = credentials => {\r\n\r\n    axios.post(API_URL + '/users/authenticate', {\r\n              userID: credentials.userID,\r\n              password: credentials.password\r\n          })\r\n          .then((response) => {\r\n              let newLoggedIn = false;\r\n              console.log(response.data);\r\n\r\n              if (response.data === \"Customer Permission Granted\") {\r\n                setUserType(\"customer\")\r\n                console.log(\"logged in\");\r\n                newLoggedIn = true;\r\n                console.log(\"poop\");\r\n                setUser(credentials.userID)\r\n                console.log(user)\r\n                console.log(credentials.userID)\r\n                  \r\n              }\r\n              else if (response.data === \"Admin Permission Granted\") {\r\n                setUserType(\"admin\")\r\n                console.log(\"logged in\");\r\n                newLoggedIn = true;\r\n                console.log(\"poop\");\r\n                setUser(credentials.userID)\r\n                console.log(user)\r\n                console.log(credentials.userID)\r\n                  \r\n              }\r\n              else\r\n                setErrors(response.data)\r\n              \r\n\r\n                 \r\n          });\r\n         \r\n          \r\n  }\r\n      \r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {user === \"\" ? <Login Login = {loggedIn} errors = {loginErrors}/> : <Redirect to= {{pathname: '/Dashboard', state: {user: user, userType: userType}}}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Navbar.js",["102","103","104","105","106","107","108","109","110","111"],"import React from 'react'\r\nimport logoutIcon from './Images/logout-icon.svg'\r\nimport moneyIcon from './Images/money.svg'\r\nimport plusIcon from './Images/plus-icon.svg'\r\nimport profileIcon from './Images/profile-icon.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n            console.log(this.props)\r\n            return (\r\n                \r\n                <div>\r\n                    <nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                        <Link to = {{pathname: '/Dashboard', state: {user: this.props.user, userType: this.props.userType}}}>\r\n                            <a class=\"navbar-brand\" style = {{color: \"white\"}}>Where's My Money?\r\n                        <img src={moneyIcon} style = {{height: 30, width: 40}}></img>\r\n                        </a>\r\n                        </Link>\r\n                        \r\n                    \r\n                        <div class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                            <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            <Link to = {{pathname: '/AddExpense', state: {user: this.props.user, userType: this.props.userType}}}>\r\n                                <a class=\"nav-link\" style = {{color: \"white\"}}>Add Expense\r\n                                <img src={plusIcon} style = {{height: 30, width: 40}}></img>\r\n                                </a>\r\n                            </Link>\r\n                                <li class=\"nav-item active\">\r\n                                    <a class=\"nav-link\" href=\"#\"> Manage Expenses</a>\r\n                                </li>\r\n                                <li class=\"nav-item active\">\r\n                                <Link to = {{pathname: '/Profile/' + this.props.user, state: {userType: this.props.userType}}}>\r\n                                        <a class = 'nav-link' style = {{color: \"white\"}}>\r\n                                        Profile <span ><img src={profileIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                        </a>\r\n                                    </Link>\r\n                                </li>           \r\n                            </ul>\r\n                            <form class=\"form-inline my-2 my-lg-0\">\r\n                                <Link to = ''>\r\n                                    <a class = 'nav-item active' style = {{color: \"white\"}}>\r\n                                    Logout <span ><img src={logoutIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                    </a>\r\n                                </Link>\r\n                            \r\n                            </form>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            )\r\n        \r\n}\r\n}\r\nexport default Navbar\r\n\r\n\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\LoadingPage.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Profile.js",["112","113","114","115"],"import React, { Component } from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_URL_UPDATE_USER, API_URL_USERS } from '../config'\r\nimport Navbar from './Navbar'\r\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap'\r\nimport AdminNavbar from './AdminNavbar'\r\n\r\nexport default class Profile extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            user : {},\r\n            userType: this.props.location.state[\"userType\"],\r\n            errors: {}\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state)\r\n        let {username} = this.props.match.params\r\n        axios.get(API_URL_USERS + '/' + username)\r\n        .then((response) => {\r\n            \r\n            this.setState({user: response.data})\r\n            console.log(this.state.user)\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        let user = this.state.user;\r\n        user[event.target.name] = event.target.value;\r\n        this.setState({user : user});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        if (this.validate()) {\r\n            event.preventDefault()\r\n            console.log(\"calling api...\")\r\n            axios.post(API_URL_UPDATE_USER, {\r\n                userID: this.state.user[\"userID\"],\r\n                email: this.state.user[\"email\"],\r\n                password: this.state.user[\"password\"],\r\n                fname: this.state.user[\"fname\"],\r\n                lname: this.state.user[\"lname\"],\r\n                userType: this.state.user[\"userType\"],\r\n                dob: this.state.user[\"dob\"],\r\n                annIncome: this.state.user[\"annIncome\"],\r\n                filingStatus: this.state.user[\"filingStatus\"]\r\n            }).then((response) => {\r\n                let errors = this.state.errors\r\n                if (response.data === \"User updated\"){ \r\n                    errors[\"update\"] = \"Profile successfully updated!\"\r\n                    this.setState({errors: errors})\r\n                }\r\n                else {\r\n                    console.log(\"not updated\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    validate() {\r\n        let user = this.state.user\r\n        let valid = true\r\n        let errors = this.state.errors\r\n\r\n        if(user[\"password\"] !== user[\"confirmPassword\"]){\r\n                errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmPassword\"] = \"\";\r\n        }\r\n        if(user[\"email\"] !== user[\"confirmEmail\"]){\r\n                errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmEmail\"] = \"\";\r\n        }\r\n        if(user[\"filingStatus\"] === \"\" || user[\"filingStatus\"] === null){\r\n            errors[\"filingStatus\"] = \"Please select a filing status.\"\r\n        }\r\n    \r\n        this.setState({user: user, errors:errors});\r\n        console.log(valid)\r\n        return valid;\r\n    }\r\n\r\n    printTaxBracket(){\r\n        //Based on 2019 tax data\r\n        let tax_bracket;\r\n        let user = this.state.user\r\n        if(user[\"filingStatus\"]=\"Single\"){\r\n            if(user[\"annIncome\"]<=9700){\r\n                tax_bracket=0.10;\r\n            }else if(user[\"annIncome\"]<=39475){\r\n                tax_bracket=0.12;\r\n            }else if(user[\"annIncome\"]<=84200){\r\n                tax_bracket=0.22;\r\n            }else if(user[\"annIncome\"]<=160725){\r\n                tax_bracket=0.24;\r\n            }else if(user[\"annIncome\"]<=204100){\r\n                tax_bracket=0.32;\r\n            }else if(user[\"annIncome\"]<=520300){\r\n                tax_bracket=0.35;\r\n            }else{\r\n                tax_bracket=0.37;\r\n            }\r\n        }else if(user[\"filingStatus\"]=\"Married filing jointly\"){\r\n            if(user[\"annIncome\"]<=19400){\r\n                tax_bracket=0.10;\r\n            }else if(user[\"annIncome\"]<=78950){\r\n                tax_bracket=0.12;\r\n            }else if(user[\"annIncome\"]<=168400){\r\n                tax_bracket=0.22;\r\n            }else if(user[\"annIncome\"]<=321450){\r\n                tax_bracket=0.24;\r\n            }else if(user[\"annIncome\"]<=408200){\r\n                tax_bracket=0.32;\r\n            }else if(user[\"annIncome\"]<=612350){\r\n                tax_bracket=0.35;\r\n            }else{\r\n                tax_bracket=0.37;\r\n            }\r\n        }else if(user[\"filingStatus\"]=\"Married filing separately\"){\r\n            if(user[\"annIncome\"]<=9700){\r\n                tax_bracket=0.10;\r\n            }else if(user[\"annIncome\"]<=39475){\r\n                tax_bracket=0.12;\r\n            }else if(user[\"annIncome\"]<=84200){\r\n                tax_bracket=0.22;\r\n            }else if(user[\"annIncome\"]<=160725){\r\n                tax_bracket=0.24;\r\n            }else if(user[\"annIncome\"]<=204100){\r\n                tax_bracket=0.32;\r\n            }else if(user[\"annIncome\"]<=306175){\r\n                tax_bracket=0.35;\r\n            }else{\r\n                tax_bracket=0.37;\r\n            }\r\n        }else{\r\n            if(user[\"annIncome\"]<=13850){\r\n                tax_bracket=0.10;\r\n            }else if(user[\"annIncome\"]<=52850){\r\n                tax_bracket=0.12;\r\n            }else if(user[\"annIncome\"]<=84200){\r\n                tax_bracket=0.22;\r\n            }else if(user[\"annIncome\"]<=160700){\r\n                tax_bracket=0.24;\r\n            }else if(user[\"annIncome\"]<=204100){\r\n                tax_bracket=0.32;\r\n            }else if(user[\"annIncome\"]<=510300){\r\n                tax_bracket=0.35;\r\n            }else{\r\n                tax_bracket=0.37;\r\n            }\r\n        }\r\n        let tax_brack_statement=\"Your tax bracket is \" + tax_bracket;\r\n        alert(tax_brack_statement);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.userType === \"customer\" ? \r\n                    <Navbar user = {this.state.user[\"userID\"]} userType = {this.state.userType}/> : <AdminNavbar user = {this.state.user[\"userID\"]} userType = {this.state.userType}></AdminNavbar> }\r\n                <h1>Edit Profile</h1>\r\n                <Form onSubmit = {this.handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFName\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"fname\" onChange = {this.handleChange} value = {this.state.user[\"fname\"]} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridLName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"lname\" onChange = {this.handleChange} value = {this.state.user[\"lname\"]} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formEmail\">\r\n                        <Form.Label>New Email Address</Form.Label>\r\n                        <Form.Control type = \"email\" name = \"email\" onChange = {this.handleChange} value = {this.state.user[\"email\"]} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors[\"confirmEmail\"]}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm New Email Address</Form.Label>\r\n                        <Form.Control type = \"email\"  name = \"confirmEmail\" onChange = {this.handleChange}  required/>\r\n                    </Form.Group>\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                \r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formPassword\">\r\n                        <Form.Label>Change Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" onChange = {this.handleChange} value = {this.state.user[\"password\"]} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors[\"confirmPassword\"]}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm New Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"confirmPassword\" onChange = {this.handleChange}   required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                   \r\n                    <Form.Group as={Col} controlId=\"formFilingStatus\">\r\n                    <Form.Label>Filing Status</Form.Label>\r\n                    <Form.Control as=\"select\"  name = \"filingStatus\" id = \"filingStatus\" onChange = {this.handleChange} value = {this.state.user[\"filingStatus\"]} required>\r\n                        <option>Single</option>\r\n                        <option>Married filing jointly</option>\r\n                        <option>Married filing seperately</option>\r\n                        <option>Head of household</option>\r\n                    </Form.Control>\r\n                    \r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Col} controlId=\"formAnnualIncome\"  required>\r\n                    <Form.Label>Annual Income</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type = \"number\" min={0} name = \"annIncome\" onChange = {this.handleChange} value = {this.state.user[\"annIncome\"]}  />\r\n                    </InputGroup>\r\n                    \r\n                    </Form.Group> \r\n                </Form.Row>\r\n\r\n                <Form.Group className = \"btn1\">\r\n                    <Button variant=\"primary\" type=\"submit\" onclick={this.printTaxBracket}>\r\n                        Save Changes\r\n                    </Button>\r\n                    <Form.Text className = \"updateStatus\">{this.state.errors[\"update\"]}</Form.Text>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\config.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AdminNavbar.js",["116","117","118","119","120","121","122","123","124"],"import React from 'react'\r\nimport logoutIcon from './Images/logout-icon.svg'\r\nimport moneyIcon from './Images/money.svg'\r\nimport plusIcon from './Images/plus-icon.svg'\r\nimport profileIcon from './Images/profile-icon.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass AdminNavbar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n       \r\n            return (\r\n                \r\n                <div>\r\n                    <nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                        <Link to = {{pathname: '/Dashboard', state: {user: this.props.user, userType: this.props.userType}}}>\r\n                            <a class=\"navbar-brand\" style = {{color: \"white\"}}>Where's My Money?\r\n                            <img src={moneyIcon} style = {{height: 30, width: 40}}></img>\r\n                            </a>\r\n                        </Link>\r\n                    \r\n                        <div class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                            <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                                <li class=\"nav-item active\">\r\n                                    <Link to = {{pathname: '/AddUser/', state: {user: this.props.user, userType: this.props.userType}}}>\r\n                                        <a class = 'nav-link' style = {{color: \"white\"}}>\r\n                                        Add User <span ><img src={plusIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                        </a>\r\n                                    </Link>\r\n                                </li>\r\n                                <li class=\"nav-item active\">\r\n                                    <Link to = {{pathname: '/Profile/' + this.props.user, state: {userType: this.props.userType}}}>\r\n                                        <a class = 'nav-link' style = {{color: \"white\"}}>\r\n                                        Profile <span ><img src={profileIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                        </a>\r\n                                    </Link>\r\n                                </li>           \r\n                            </ul>\r\n                            <form class=\"form-inline my-2 my-lg-0\">\r\n                                <Link to = ''>\r\n                                    <a class = 'nav-item active' style = {{color: \"white\"}}>\r\n                                    Logout <span ><img src={logoutIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                    </a>\r\n                                </Link>\r\n                                {/* <button class=\"btn\" style = {{color: \"white\"}} onSubmit = {this.handleSubmit} >\r\n                                        \r\n                                </button> */}\r\n                            \r\n                            </form>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            )\r\n        \r\n}\r\n}\r\nexport default AdminNavbar\r\n\r\n\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AddUser.js",["125","126","127","128","129","130","131"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport '../Styles/Custom.scss'\r\nimport {Form, Button, Col, InputGroup, ToggleButtonGroup, ToggleButton} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport AdminNavbar from './AdminNavbar'\r\nimport { ThemeConsumer } from 'react-bootstrap/esm/ThemeProvider'\r\n\r\n\r\nclass AddUser extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            registered: false,\r\n            input: {filingStatus: \"Single\"},\r\n            errors: {}\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount () {\r\n        let input = this.state.input\r\n        //input[\"filingStatus\"] = document.getElementById(\"filingStatus\").value\r\n        input[\"userType\"] = \"customer\"\r\n        console.log(input[\"userType\"])\r\n        this.setState({registered: false, input:input, errors:this.state.errors})\r\n    }\r\n\r\n    handleChange(event) {\r\n        let input = this.state.input;\r\n        input[event.target.name] = event.target.value;\r\n        this.setState({\r\n            registered: false,\r\n            input:input,\r\n            errors: this.state.errors\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(this.state);\r\n        event.preventDefault();\r\n        if (this.validate()) {\r\n            console.log(\"registering...\")\r\n            if (this.state.input[\"userType\"] === 'customer') {\r\n                console.log(\"customer...\")\r\n                axios.post(API_URL + '/users/register', {\r\n                    userID: this.state.input.username,\r\n                    email: this.state.input[\"email\"],\r\n                    password: this.state.input[\"password\"],\r\n                    fname: this.state.input[\"fname\"],\r\n                    lname: this.state.input[\"lname\"],\r\n                    userType: this.state.input[\"userType\"],\r\n                    dob: this.state.input[\"dob\"],\r\n                    annIncome: this.state.input[\"annualIncome\"],\r\n                    filingStatus: this.state.input[\"filingStatus\"]\r\n                }).then((response) => {\r\n                    console.log(response.data)\r\n                    \r\n                    if (response.data === 'User exists') { \r\n                        this.state.errors.usernameExists = \"Username exists, try a different one.\"\r\n                        this.state.errors[\"output\"] = response.data\r\n                        this.setState( {\r\n                            registered: false,\r\n                            input: this.state.input,\r\n                            errors: this.state.errors\r\n                        } ) \r\n                    }\r\n                    else {\r\n                        this.setState ({registered: true, input : {filingStatus: \"Single\"}, errors : {output: response.data}})\r\n                    }\r\n                \r\n                }\r\n                )\r\n            }\r\n            else {\r\n                console.log(\"admin....\")\r\n                axios.post(API_URL + '/users/register', {\r\n                    userID: this.state.input.username,\r\n                    email: this.state.input[\"email\"],\r\n                    password: this.state.input[\"password\"],\r\n                    fname: this.state.input[\"fname\"],\r\n                    lname: this.state.input[\"lname\"],\r\n                    userType: this.state.input[\"userType\"],\r\n                    dob: new Date(),\r\n                    annIncome: 0,\r\n                    filingStatus: \"Single\"\r\n                }).then((response) => {\r\n                    console.log(response.data)\r\n                    \r\n                    if (response.data === 'User exists') { \r\n                        this.state.errors.usernameExists = \"Username exists, try a different one.\"\r\n                        this.state.errors[\"output\"] = response.data\r\n                        this.setState( {\r\n                            registered: false,\r\n                            input: this.state.input,\r\n                            errors: this.state.errors\r\n                        } ) \r\n                    }\r\n                    else {\r\n                        this.setState ({registered: true, input : {filingStatus: \"Single\"}, errors : {output: response.data}})\r\n                    }\r\n                \r\n                }\r\n                )\r\n            }\r\n            \r\n        }\r\n        console.log(this.state.registered)\r\n    }      \r\n    \r\n    \r\n    validate() {\r\n        \r\n        let valid = true;\r\n        let input = this.state.input;\r\n        let errors = this.state.errors;\r\n        let dob = new Date(input[\"dob\"])\r\n        let today = new Date()\r\n        if (input[\"userType\"] === 'customer') {\r\n\r\n        \r\n            if(input[\"password\"] !== input[\"confirmPassword\"]){\r\n                    errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                    valid = false;\r\n            }\r\n            else {\r\n                errors[\"confirmPassword\"] = \"\";\r\n            }\r\n            if(input[\"email\"] !== input[\"confirmEmail\"]){\r\n                    errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                    valid = false;\r\n            }\r\n            else {\r\n                errors[\"confirmEmail\"] = \"\";\r\n            }\r\n            if(input[\"filingStatus\"] === \"\" || input[\"filingStatus\"] === null){\r\n                errors[\"filingStatus\"] = \"Please select a filing status.\"\r\n            }\r\n            if (dob > today){\r\n                errors[\"birthdayError\"] = \"Birthday cannot be a future date.\"\r\n            }\r\n            else {\r\n                errors[\"birthdayError\"] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            if(input[\"password\"] !== input[\"confirmPassword\"]){\r\n                errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                valid = false;\r\n            }\r\n            else {\r\n                errors[\"confirmPassword\"] = \"\";\r\n            }\r\n            if(input[\"email\"] !== input[\"confirmEmail\"]){\r\n                    errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                    valid = false;\r\n            }\r\n            else {\r\n                errors[\"confirmEmail\"] = \"\";\r\n            }\r\n        }\r\n    \r\n        this.setState({errors:errors});\r\n        return valid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n        <div >\r\n            <AdminNavbar user = {this.props.location.state[\"user\"]} userType = {this.props.location.state[\"userType\"]}></AdminNavbar>\r\n            <h1>Add User</h1>\r\n            <Form onSubmit = {this.handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFName\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"fname\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridLName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"lname\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formEmail\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type = \"email\" name = \"email\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmEmail}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm Email Address</Form.Label>\r\n                        <Form.Control type = \"email\"  name = \"confirmEmail\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type = \"text\" name = \"username\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"usernameExists\">{this.state.errors.usernameExists}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formPassword\">\r\n                        <Form.Label>Create a Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmPassword}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"confirmPassword\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formUserType\" required>\r\n                        <Form.Label>User Type</Form.Label><br></br>\r\n                        <ToggleButtonGroup name=\"userType\" type=\"radio\" className=\"mb-2\" defaultValue={'customer'}>\r\n                            <ToggleButton value={'customer'} onChange = {this.handleChange} >Customer</ToggleButton>\r\n                            <ToggleButton value={'admin'} onChange = {this.handleChange} >Admin</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                {this.state.input[\"userType\"] === 'customer' ? <div>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBirthday\">\r\n                        <Form.Label>Birthday</Form.Label>\r\n                        \r\n                        <Form.Control type = \"date\" name = \"dob\"  onChange = {this.handleChange} required />\r\n                        <Form.Text className = \"birthdayValidate\">{this.state.errors.birthdayError}</Form.Text>     \r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formFilingStatus\">\r\n                    <Form.Label>Filing Status</Form.Label>\r\n                    <Form.Control as=\"select\"  name = \"filingStatus\" id = \"filingStatus\" onChange = {this.handleChange} required>\r\n                        <option>Single</option>\r\n                        <option>Married filing jointly</option>\r\n                        <option>Married filing seperately</option>\r\n                        <option>Head of household</option>\r\n                    </Form.Control>\r\n                    <Form.Text className = \"confirmPass\">{this.state.errors.filingStatus}</Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formAnnualIncome\"  required>\r\n                    <Form.Label>Annual Income</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type = \"number\" min={0} name = \"annualIncome\" onChange = {this.handleChange} />\r\n                    </InputGroup>\r\n                    \r\n                    </Form.Group>               \r\n                </Form.Row></div>\r\n                : <div></div> }\r\n                \r\n                <Form.Group className = \"btn1\">\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Add User\r\n                    </Button>\r\n                    <Form.Text className = \"output\">{this.state.errors[\"output\"]}</Form.Text>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default AddUser;","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AddExpense.js",["132","133"],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\EditUser.js",["134","135"],"import React, { Component } from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_URL_UPDATE_USER, API_URL_USERS } from '../config'\r\nimport Navbar from './Navbar'\r\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap'\r\nimport AdminNavbar from './AdminNavbar'\r\n\r\nexport default class EditUser extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            admin: this.props.location.state[\"admin\"],\r\n            user : {userID: this.props.location.state[\"user\"]},\r\n            userType: \"admin\",\r\n            errors: {}\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state)\r\n        console.log(this.state.user[\"userID\"])\r\n        axios.get(API_URL_USERS + '/' + this.state.user[\"userID\"])\r\n        .then((response) => {\r\n            \r\n            this.setState({user: response.data})\r\n            console.log(this.state.user)\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        let user = this.state.user;\r\n        user[event.target.name] = event.target.value;\r\n        this.setState({user : user});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        if (this.validate()) {\r\n            event.preventDefault()\r\n\r\n            axios.post(API_URL_UPDATE_USER, {\r\n                userID: this.state.user[\"userID\"],\r\n                email: this.state.user[\"email\"],\r\n                password: this.state.user[\"password\"],\r\n                fname: this.state.user[\"fname\"],\r\n                lname: this.state.user[\"lname\"],\r\n                userType: this.state.user[\"userType\"],\r\n                dob: this.state.user[\"dob\"],\r\n                annIncome: this.state.user[\"annIncome\"],\r\n                filingStatus: this.state.user[\"filingStatus\"]\r\n            }).then((response) => {\r\n                let errors = this.state.errors\r\n                if (response.data === \"User updated\"){ \r\n                    errors[\"update\"] = \"Account successfully updated!\"\r\n                    this.setState({errors: errors})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    validate() {\r\n        let user = this.state.user\r\n        let valid = true\r\n        let errors = this.state.errors\r\n\r\n        if(user[\"password\"] !== user[\"confirmPassword\"]){\r\n                errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmPassword\"] = \"\";\r\n        }\r\n        if(user[\"email\"] !== user[\"confirmEmail\"]){\r\n                errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmEmail\"] = \"\";\r\n        }\r\n        if(user[\"filingStatus\"] === \"\" || user[\"filingStatus\"] === null){\r\n            errors[\"filingStatus\"] = \"Please select a filing status.\"\r\n        }\r\n    \r\n        this.setState({user: user, errors:errors});\r\n        return valid;\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <AdminNavbar user = {this.state.admin} userType = {this.state.userType}></AdminNavbar>\r\n                <h1>Edit User</h1>\r\n                <Form onSubmit = {this.handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFName\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"fname\" onChange = {this.handleChange} value = {this.state.user[\"fname\"]} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridLName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"lname\" onChange = {this.handleChange} value = {this.state.user[\"lname\"]} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formEmail\">\r\n                        <Form.Label>New Email Address</Form.Label>\r\n                        <Form.Control type = \"email\" name = \"email\" onChange = {this.handleChange} value = {this.state.user[\"email\"]} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors[\"confirmEmail\"]}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm New Email Address</Form.Label>\r\n                        <Form.Control type = \"email\"  name = \"confirmEmail\" onChange = {this.handleChange}  required/>\r\n                    </Form.Group>\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                \r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formPassword\">\r\n                        <Form.Label>Change Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" onChange = {this.handleChange} value = {this.state.user[\"password\"]} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors[\"confirmPassword\"]}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm New Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"confirmPassword\" onChange = {this.handleChange}   required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                   \r\n                    <Form.Group as={Col} controlId=\"formFilingStatus\">\r\n                    <Form.Label>Filing Status</Form.Label>\r\n                    <Form.Control as=\"select\"  name = \"filingStatus\" id = \"filingStatus\" onChange = {this.handleChange} value = {this.state.user[\"filingStatus\"]} required>\r\n                        <option>Single</option>\r\n                        <option>Married filing jointly</option>\r\n                        <option>Married filing seperately</option>\r\n                        <option>Head of household</option>\r\n                    </Form.Control>\r\n                    \r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Col} controlId=\"formAnnualIncome\"  required>\r\n                    <Form.Label>Annual Income</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type = \"number\" min={0} name = \"annIncome\" onChange = {this.handleChange} value = {this.state.user[\"annIncome\"]}  />\r\n                    </InputGroup>\r\n                    \r\n                    </Form.Group> \r\n                </Form.Row>\r\n\r\n                <Form.Group className = \"btn1\">\r\n                    <Button variant=\"primary\" type=\"submit\" onclick={this.printTaxBracket}>\r\n                        Save Changes\r\n                    </Button>\r\n                    <Form.Text className = \"updateStatus\">{this.state.errors[\"update\"]}</Form.Text>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n",{"ruleId":"136","severity":1,"message":"137","line":6,"column":8,"nodeType":"138","messageId":"139","endLine":6,"endColumn":13},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"136","severity":1,"message":"144","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"145","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":12},{"ruleId":"136","severity":1,"message":"146","line":3,"column":16,"nodeType":"138","messageId":"139","endLine":3,"endColumn":24},{"ruleId":"136","severity":1,"message":"147","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":13},{"ruleId":"136","severity":1,"message":"148","line":6,"column":8,"nodeType":"138","messageId":"139","endLine":6,"endColumn":16},{"ruleId":"136","severity":1,"message":"144","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"145","line":8,"column":9,"nodeType":"138","messageId":"139","endLine":8,"endColumn":13},{"ruleId":"136","severity":1,"message":"146","line":8,"column":15,"nodeType":"138","messageId":"139","endLine":8,"endColumn":23},{"ruleId":"136","severity":1,"message":"149","line":113,"column":13,"nodeType":"138","messageId":"139","endLine":113,"endColumn":18},{"ruleId":"150","severity":1,"message":"151","line":154,"column":23,"nodeType":"152","messageId":"153","endLine":154,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":155,"column":23,"nodeType":"152","messageId":"153","endLine":155,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":156,"column":32,"nodeType":"152","messageId":"153","endLine":156,"endColumn":34},{"ruleId":"150","severity":1,"message":"151","line":157,"column":26,"nodeType":"152","messageId":"153","endLine":157,"endColumn":28},{"ruleId":"150","severity":1,"message":"151","line":158,"column":28,"nodeType":"152","messageId":"153","endLine":158,"endColumn":30},{"ruleId":"150","severity":1,"message":"151","line":159,"column":27,"nodeType":"152","messageId":"153","endLine":159,"endColumn":29},{"ruleId":"150","severity":1,"message":"151","line":160,"column":24,"nodeType":"152","messageId":"153","endLine":160,"endColumn":26},{"ruleId":"150","severity":1,"message":"154","line":167,"column":39,"nodeType":"152","messageId":"153","endLine":167,"endColumn":41},{"ruleId":"150","severity":1,"message":"154","line":206,"column":39,"nodeType":"152","messageId":"153","endLine":206,"endColumn":41},{"ruleId":"155","severity":1,"message":"156","line":264,"column":12,"nodeType":"157","messageId":"158","endLine":264,"endColumn":41},{"ruleId":"155","severity":1,"message":"156","line":280,"column":18,"nodeType":"157","messageId":"158","endLine":280,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":296,"column":18,"nodeType":"157","messageId":"158","endLine":296,"endColumn":66},{"ruleId":"136","severity":1,"message":"159","line":329,"column":13,"nodeType":"138","messageId":"139","endLine":329,"endColumn":32},{"ruleId":"136","severity":1,"message":"144","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"160","severity":1,"message":"161","line":59,"column":21,"nodeType":"162","endLine":59,"endColumn":38},{"ruleId":"136","severity":1,"message":"163","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":17},{"ruleId":"136","severity":1,"message":"164","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":14},{"ruleId":"136","severity":1,"message":"165","line":17,"column":9,"nodeType":"138","messageId":"139","endLine":17,"endColumn":15},{"ruleId":"136","severity":1,"message":"166","line":45,"column":17,"nodeType":"138","messageId":"139","endLine":45,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":11,"column":5,"nodeType":"169","messageId":"170","endLine":13,"endColumn":6},{"ruleId":"171","severity":1,"message":"172","line":24,"column":29,"nodeType":"173","endLine":24,"endColumn":80},{"ruleId":"174","severity":1,"message":"175","line":25,"column":25,"nodeType":"173","endLine":25,"endColumn":80},{"ruleId":"171","severity":1,"message":"172","line":33,"column":33,"nodeType":"173","endLine":33,"endColumn":80},{"ruleId":"174","severity":1,"message":"175","line":34,"column":33,"nodeType":"173","endLine":34,"endColumn":87},{"ruleId":"171","severity":1,"message":"176","line":38,"column":37,"nodeType":"173","endLine":38,"endColumn":66},{"ruleId":"171","severity":1,"message":"172","line":42,"column":41,"nodeType":"173","endLine":42,"endColumn":90},{"ruleId":"174","severity":1,"message":"175","line":43,"column":56,"nodeType":"173","endLine":43,"endColumn":113},{"ruleId":"171","severity":1,"message":"172","line":50,"column":37,"nodeType":"173","endLine":50,"endColumn":93},{"ruleId":"174","severity":1,"message":"175","line":51,"column":51,"nodeType":"173","endLine":51,"endColumn":107},{"ruleId":"136","severity":1,"message":"177","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":99,"column":12,"nodeType":"157","messageId":"158","endLine":99,"endColumn":41},{"ruleId":"155","severity":1,"message":"156","line":115,"column":18,"nodeType":"157","messageId":"158","endLine":115,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":131,"column":18,"nodeType":"157","messageId":"158","endLine":131,"endColumn":66},{"ruleId":"167","severity":1,"message":"168","line":11,"column":5,"nodeType":"169","messageId":"170","endLine":13,"endColumn":6},{"ruleId":"171","severity":1,"message":"172","line":24,"column":29,"nodeType":"173","endLine":24,"endColumn":80},{"ruleId":"174","severity":1,"message":"175","line":25,"column":29,"nodeType":"173","endLine":25,"endColumn":84},{"ruleId":"171","severity":1,"message":"172","line":33,"column":41,"nodeType":"173","endLine":33,"endColumn":90},{"ruleId":"174","severity":1,"message":"175","line":34,"column":57,"nodeType":"173","endLine":34,"endColumn":111},{"ruleId":"171","severity":1,"message":"172","line":40,"column":41,"nodeType":"173","endLine":40,"endColumn":90},{"ruleId":"174","severity":1,"message":"175","line":41,"column":56,"nodeType":"173","endLine":41,"endColumn":113},{"ruleId":"171","severity":1,"message":"172","line":48,"column":37,"nodeType":"173","endLine":48,"endColumn":93},{"ruleId":"174","severity":1,"message":"175","line":49,"column":51,"nodeType":"173","endLine":49,"endColumn":107},{"ruleId":"136","severity":1,"message":"144","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"146","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":18},{"ruleId":"136","severity":1,"message":"178","line":9,"column":10,"nodeType":"138","messageId":"139","endLine":9,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":64,"column":25,"nodeType":"162","endLine":64,"endColumn":42},{"ruleId":"160","severity":1,"message":"161","line":65,"column":25,"nodeType":"162","endLine":65,"endColumn":42},{"ruleId":"160","severity":1,"message":"161","line":95,"column":25,"nodeType":"162","endLine":95,"endColumn":42},{"ruleId":"160","severity":1,"message":"161","line":96,"column":25,"nodeType":"162","endLine":96,"endColumn":42},{"ruleId":"136","severity":1,"message":"144","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"146","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":18},{"ruleId":"136","severity":1,"message":"177","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":18},{"ruleId":"136","severity":1,"message":"164","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":14},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","no-native-reassign",["179"],"no-negated-in-lhs",["180"],"'ReactDOM' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'axios' is defined but never used.","'Register' is defined but never used.","'color' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'tax_brack_statement' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Dashboard' is defined but never used.","'Navbar' is defined but never used.","'logout' is assigned a value but never used.","'newLoggedIn' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'ThemeConsumer' is defined but never used.","no-global-assign","no-unsafe-negation"]