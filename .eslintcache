<<<<<<< HEAD
[{"/Users/kanishkaborana/Desktop/software engineering/master/src/index.js":"1","/Users/kanishkaborana/Desktop/software engineering/master/src/reportWebVitals.js":"2","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/AddUser.js":"3","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/Login.js":"4","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/App.js":"5","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/Dashboard.js":"6","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/Register.js":"7","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/LoadingPage.js":"8","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/AddExpense.js":"9","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/EditUser.js":"10","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/Profile.js":"11","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/ManageExpense.js":"12","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/EditExpense.js":"13","/Users/kanishkaborana/Desktop/software engineering/master/src/config.js":"14","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/AdminNavbar.js":"15","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/Navbar.js":"16","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/CompareExpense.js":"17"},{"size":1939,"mtime":1619391379453,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1619214332935,"results":"20","hashOfConfig":"19"},{"size":11258,"mtime":1619379576100,"results":"21","hashOfConfig":"19"},{"size":2615,"mtime":1619214332929,"results":"22","hashOfConfig":"19"},{"size":1312,"mtime":1619379793067,"results":"23","hashOfConfig":"19"},{"size":13563,"mtime":1619392059436,"results":"24","hashOfConfig":"19"},{"size":8305,"mtime":1619214332930,"results":"25","hashOfConfig":"19"},{"size":400,"mtime":1619214332929,"results":"26","hashOfConfig":"19"},{"size":6340,"mtime":1619391379459,"results":"27","hashOfConfig":"19"},{"size":7073,"mtime":1619389186200,"results":"28","hashOfConfig":"19"},{"size":7476,"mtime":1619390259250,"results":"29","hashOfConfig":"19"},{"size":3833,"mtime":1619385176664,"results":"30","hashOfConfig":"19"},{"size":7178,"mtime":1619388762785,"results":"31","hashOfConfig":"19"},{"size":533,"mtime":1619214332930,"results":"32","hashOfConfig":"19"},{"size":2839,"mtime":1619379626459,"results":"33","hashOfConfig":"19"},{"size":3492,"mtime":1619214332930,"results":"34","hashOfConfig":"19"},{"size":7538,"mtime":1619391379443,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1bzbl9b",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kanishkaborana/Desktop/software engineering/master/src/index.js",["75"],"/Users/kanishkaborana/Desktop/software engineering/master/src/reportWebVitals.js",[],["76","77"],"/Users/kanishkaborana/Desktop/software engineering/master/src/Components/AddUser.js",["78","79","80","81"],"/Users/kanishkaborana/Desktop/software engineering/master/src/Components/Login.js",["82","83","84","85","86"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Link, { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport '../Styles/Custom.scss'\nimport Register from './Register'\nimport {Form, Button} from 'react-bootstrap'\n\nclass Login extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            userID: \"\",\n            password: \"\"\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        let newUserID = this.state.userID\n        let newPassword = this.state.password\n        if (event.target.name === \"userID\"){\n            newUserID = event.target.value\n        }\n        else if (event.target.name === \"password\") {\n            newPassword = event.target.value\n        }\n        this.setState({\n            userID: newUserID,\n            password: newPassword\n        });\n        \n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        \n        this.setState({\n            userID: this.state.userID,\n            password: this.state.password\n        });\n\n        this.props.Login({userID: this.state.userID, password: this.state.password})\n       \n               \n    }\n\n    render(){\n        return(\n            \n            <div id=\"loginContainer\">\n                <h1>Login</h1>\n                <Form className = \"loginForm\" id = \"login\" onSubmit = {this.handleSubmit}>\n                    <Form.Group controlid = \"userIDForm\" >\n                        <Form.Label className = \"label1\">Username</Form.Label>\n                        <Form.Control type = \"text\" name = \"userID\" placeholder = \"Enter username\" className = \"input1\" onChange = {this.handleChange} required/>\n                    </Form.Group>\n\n                    <Form.Group controlid = \"passForm\">\n                        <Form.Label className = \"label1\">Password</Form.Label>\n                        <Form.Control type = \"password\" name = \"password\" placeholder = \"Enter password\" className = \"input1\" onChange = {this.handleChange} required/>\n                        <Form.Text className = \"confirmPass\">{this.props.errors}</Form.Text>\n                    </Form.Group>\n                    <Form.Group className = \"btn1\">\n                        <Button variant = \"primary\" type = \"submit\" >Login</Button>\n                        <Button href='/Register' variant = \"primary\" className = \"link1\">Register an Account</Button>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Login;","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/App.js",[],"/Users/kanishkaborana/Desktop/software engineering/master/src/Components/Dashboard.js",["87","88","89","90","91","92","93"],"/Users/kanishkaborana/Desktop/software engineering/master/src/Components/Register.js",["94","95"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport '../Styles/Custom.scss'\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport axios from 'axios'\nimport {API_URL} from '../config'\n\n\nclass Register extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            registered: false,\n            input: {},\n            errors: {}\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount () {\n        let input = this.state.input\n        input[\"filingStatus\"] = document.getElementById(\"filingStatus\").value\n        this.setState({registered: false, input:input, errors:this.state.errors})\n    }\n\n    handleChange(event) {\n        let input = this.state.input;\n        input[event.target.name] = event.target.value;\n      \n        this.setState({\n            registered: false,\n            input:input,\n            errors: this.state.errors\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.validate()) {\n            axios.post(API_URL + '/users/register', {\n                userID: this.state.input.username,\n                email: this.state.input[\"email\"],\n                password: this.state.input[\"password\"],\n                fname: this.state.input[\"fname\"],\n                lname: this.state.input[\"lname\"],\n                userType: \"customer\",\n                dob: this.state.input[\"dob\"],\n                annIncome: this.state.input[\"annualIncome\"],\n                filingStatus: this.state.input[\"filingStatus\"]\n            }).then((response) => {\n                if (response.data === 'User exists') { \n                    this.state.errors.usernameExists = \"Username exists, try a different one.\"\n                \n                    this.setState( {\n                        registered: false,\n                        input: this.state.input,\n                        errors: this.state.errors\n                    } ) \n                }\n                else {\n                    this.setState ({registered: true, input : {}, errors : {}})\n                }\n            \n            }\n            )     \n        }\n    }      \n    \n    \n    validate() {\n        \n        let valid = true;\n        let input = this.state.input;\n        let errors = this.state.errors;\n        let dob = new Date(input[\"dob\"])\n        let today = new Date()\n        if(input[\"password\"] !== input[\"confirmPassword\"]){\n                errors[\"confirmPassword\"] = \"Passwords don't match.\";\n                valid = false;\n        }\n        else {\n            errors[\"confirmPassword\"] = \"\";\n        }\n        if(input[\"email\"] !== input[\"confirmEmail\"]){\n                errors[\"confirmEmail\"] = \"Emails don't match.\";\n                valid = false;\n        }\n        else {\n            errors[\"confirmEmail\"] = \"\";\n        }\n        if(input[\"filingStatus\"] === \"\" || input[\"filingStatus\"] === null){\n            errors[\"filingStatus\"] = \"Please select a filing status.\"\n            valid = false;\n        }\n        if (dob > today){\n            errors[\"birthdayError\"] = \"Birthday cannot be a future date.\"\n            valid = false;\n        }\n        else {\n            errors[\"birthdayError\"] = \"\"\n        }\n    \n        this.setState({errors:errors});\n        return valid;\n    }\n\n\n    render() {\n        return(\n        <div id=\"registerContainer\">\n            {this.state.registered && (<Redirect to=\"/Register/Success\"/>)}\n            <h1>Create an Account</h1>\n            <Form onSubmit = {this.handleSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridFName\">\n                    <Form.Label>First Name</Form.Label>\n                    <Form.Control type=\"text\"  name = \"fname\" onChange = {this.handleChange} required/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridLName\">\n                    <Form.Label>Last Name</Form.Label>\n                    <Form.Control type=\"text\"  name = \"lname\" onChange = {this.handleChange} required/>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formEmail\">\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control type = \"email\" name = \"email\" onChange = {this.handleChange} required/>\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmEmail}</Form.Text>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\n                        <Form.Label>Confirm Email Address</Form.Label>\n                        <Form.Control type = \"email\"  name = \"confirmEmail\" onChange = {this.handleChange} required/>\n                    </Form.Group>\n                    \n                </Form.Row>\n\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formUsername\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type = \"text\" name = \"username\" onChange = {this.handleChange} required/>\n                        <Form.Text className = \"usernameExists\">{this.state.errors.usernameExists}</Form.Text>\n                    </Form.Group>\n\n                    \n                </Form.Row>\n\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formPassword\">\n                        <Form.Label>Create a Password</Form.Label>\n                        <Form.Control type = \"password\" name = \"password\" onChange = {this.handleChange} required/>\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmPassword}</Form.Text>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type = \"password\" name = \"confirmPassword\" onChange = {this.handleChange} required/>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formBirthday\">\n                        <Form.Label>Birthday</Form.Label>\n                        \n                        <Form.Control type = \"date\" name = \"dob\"  onChange = {this.handleChange} required />\n                        <Form.Text className = \"birthdayValidate\">{this.state.errors.birthdayError}</Form.Text>     \n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formFilingStatus\">\n                    <Form.Label>Filing Status</Form.Label>\n                    <Form.Control as=\"select\"  name = \"filingStatus\" id = \"filingStatus\" onChange = {this.handleChange} required>\n                        <option>Single</option>\n                        <option>Married filing jointly</option>\n                        <option>Married filing seperately</option>\n                        <option>Head of household</option>\n                    </Form.Control>\n                    <Form.Text className = \"confirmPass\">{this.state.errors.filingStatus}</Form.Text>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formAnnualIncome\"  required>\n                    <Form.Label>Annual Income</Form.Label>\n                    <InputGroup>\n                        <InputGroup.Prepend>\n                        <InputGroup.Text>$</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control type = \"number\" min={0} name = \"annualIncome\" onChange = {this.handleChange} />\n                    </InputGroup>\n                    \n                    </Form.Group>               \n                </Form.Row>\n                <Form.Group className = \"btn1\">\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                    <Button href='/' variant = \"primary\" className = \"link1\">Return to Login</Button>\n                </Form.Group>\n            </Form>\n\n\n        </div>\n    )\n    }\n}\n\nexport default Register;","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/LoadingPage.js",[],"/Users/kanishkaborana/Desktop/software engineering/master/src/Components/AddExpense.js",["96"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport '../Styles/Custom.scss'\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport axios from 'axios'\nimport {API_URL} from '../config'\nimport Navbar from './Navbar'\n\n\nclass AddExpense extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            added: false,\n            input: {userID: this.props.location.state[\"user\"]},\n            errors: {}\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount () {\n        let input = this.state.input\n        input[\"category\"] = document.getElementById(\"category\").value\n        this.setState({added: false, input:input, errors:this.state.errors})\n    }\n\n    handleChange(event) {\n        let input = this.state.input;\n        input[event.target.name] = event.target.value;\n      \n        this.setState({\n            added: false,\n            input:input,\n            errors: this.state.errors\n        });\n    }\n\n    handleSubmit(event) {\n        let recurring = 0;\n        event.preventDefault();\n        if (this.validate()) {\n            if(document.getElementById(\"recurring\").checked){\n                recurring = 1;\n            }\n            axios.post(API_URL + '/expenses/added', {\n                userID: this.state.input.userID,\n                amount: this.state.input[\"amount\"],\n                category: this.state.input[\"category\"],\n                dateAdded: this.state.input[\"dateAdded\"],\n                expenseTitle: this.state.input[\"expenseTitle\"],\n                recurring: recurring\n            }).then((response) => {\n                this.setState ({added: true, errors : {output: response.data}})\n                //console.log(\"clearing...\")\n                //this.clear()\n                }\n            )\n        }\n        ReactDOM.findDOMNode(this.messageForm).reset();\n    } \n    \n    /*\n    clear(){\n        this.form.reset()\n    }\n    */\n        \n    validate() {\n        \n        let valid = true;\n        let input = this.state.input;\n        let errors = this.state.errors;\n        let dateAdded = new Date(input[\"dateAdded\"])\n        let today = new Date()\n        \n        // handling category \n        if(input[\"category\"] === \"\" || input[\"category\"] === null){\n            errors[\"category\"] = \"Please select a category.\"\n            valid = false;\n        }\n\n        //handling date error\n        if (dateAdded > today){\n            errors[\"dateError\"] = \"Date cannot be a future date.\"\n            valid = false;\n        }\n        else {\n            errors[\"dateError\"] = \"\"\n        }\n    \n        this.setState({errors:errors});\n        return valid;\n    }\n\n\n    render() {\n        return(\n            <div>\n                <Navbar user = {this.props.location.state[\"user\"]} userType = {this.props.location.state[\"userType\"]}/>\n                <div id=\"registerContainer\">\n                    <h1>Add an Expense</h1>\n                    <Form onSubmit = {this.handleSubmit} ref={ form => this.messageForm = form }>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formExpenseTitle\">\n                                <Form.Label>Expense Title</Form.Label>\n                                <Form.Control type = \"text\" name = \"expenseTitle\" onChange = {this.handleChange} required/>\n                            </Form.Group>                    \n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formDate\">\n                                <Form.Label>Date</Form.Label>\n                                \n                                <Form.Control type = \"date\" name = \"dateAdded\"  onChange = {this.handleChange} required />\n                                <Form.Text>{this.state.errors.dateError}</Form.Text>     \n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formAmount\"  required>\n                            <Form.Label>Amount</Form.Label>\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                <InputGroup.Text>$</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control type = \"number\" min={0} name = \"amount\" onChange = {this.handleChange} />\n                            </InputGroup>\n                            </Form.Group>    \n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formCategory\">\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control as=\"select\"  name = \"category\" id = \"category\" onChange = {this.handleChange} required>\n                                <option>Food</option>\n                                <option>Groceries</option>\n                                <option>Rent/Mortgage</option>\n                                <option>Gas</option>\n                                <option>Entertainment</option>\n                                <option>Utility</option>\n                                <option>Business</option>\n                                <option>Other</option>\n                            </Form.Control>\n                            <Form.Text>{this.state.errors.category}</Form.Text>\n                            </Form.Group>          \n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formRecurring\">\n                                <Form.Check inline label=\"Recurring\" id=\"recurring\"/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group className = \"btn1\">\n                            <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                            </Button>\n                            <Form.Text className = \"output\">{this.state.errors[\"output\"]}</Form.Text>\n                        </Form.Group>\n\n                    </Form>\n\n\n                </div>\n            </div>\n    )\n    }\n}\n\nexport default AddExpense;","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/EditUser.js",["97","98"],"/Users/kanishkaborana/Desktop/software engineering/master/src/Components/Profile.js",["99"],"/Users/kanishkaborana/Desktop/software engineering/master/src/Components/ManageExpense.js",["100","101","102","103"],"/Users/kanishkaborana/Desktop/software engineering/master/src/Components/EditExpense.js",["104"],"/Users/kanishkaborana/Desktop/software engineering/master/src/config.js",[],"/Users/kanishkaborana/Desktop/software engineering/master/src/Components/AdminNavbar.js",["105","106","107","108","109","110","111","112","113"],"/Users/kanishkaborana/Desktop/software engineering/master/src/Components/Navbar.js",["114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React from 'react'\nimport logoutIcon from './Images/logout-icon.svg'\nimport moneyIcon from './Images/money.svg'\nimport plusIcon from './Images/plus-icon.svg'\nimport profileIcon from './Images/profile-icon.svg'\nimport editIcon from './Images/editIcon.svg'\nimport compareIcon from './Images/compare.svg'\nimport { Link } from 'react-router-dom'\n\n\nclass Navbar extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    \n\n    render(){\n        return (\n            \n            <div>\n                <nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n                    <Link to = {{pathname: '/Dashboard', state: {user: this.props.user, userType: this.props.userType}}}>\n                        <a class=\"navbar-brand\" style = {{color: \"white\"}}>Where's My Money?\n                    <img src={moneyIcon} style = {{height: 30, width: 40}}></img>\n                    </a>\n                    </Link>\n                    \n                \n                    <div class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n                        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                        <Link to = {{pathname: '/AddExpense', state: {user: this.props.user, userType: this.props.userType}}}>\n                            <a class=\"nav-link\" style = {{color: \"white\"}}>Add Expense\n                            <img src={plusIcon} style = {{height: 30, width: 40}}></img>\n                            </a>\n                        </Link>\n                        <li class=\"nav-item active\">\n                        <Link to = {{pathname: '/ManageExpense', state: {user: this.props.user, userType: this.props.userType}}}>\n                            <a class=\"nav-link\" style = {{color: \"white\"}}> Manage Expenses\n                            <img src={editIcon} style = {{height: 30, width: 40}}></img>\n                            </a>\n                        </Link>\n                        </li>\n                        <li class=\"nav-item active\">\n                        <Link to = {{pathname: '/CompareExpense', state: {user: this.props.user, userType: this.props.userType}}}>\n                            <a class=\"nav-link\" style = {{color: \"white\"}}> Compare Expense\n                            <img src={compareIcon} style = {{height: 30, width: 40}}></img>\n                            </a>\n                        </Link>\n                        </li>\n                        <li class=\"nav-item active\">\n                            <Link to = {{pathname: '/Profile/' + this.props.user, state: {userType: this.props.userType}}}>\n                                <a class = 'nav-link' style = {{color: \"white\"}}>\n                                Profile <span ><img src={profileIcon} style = {{height: 30, width: 30}}></img></span>\n                                </a>\n                            </Link>\n                        </li>           \n                        </ul>\n                        <form class=\"form-inline my-2 my-lg-0\">\n                            <Link to = ''>\n                                <a class = 'nav-item active' style = {{color: \"white\"}}>\n                                Logout <span ><img src={logoutIcon} style = {{height: 30, width: 30}}></img></span>\n                                </a>\n                            </Link>\n                        \n                        </form>\n                    </div>\n                </nav>\n            </div>\n        )\n    \n    }\n}\nexport default Navbar\n\n\n","/Users/kanishkaborana/Desktop/software engineering/master/src/Components/CompareExpense.js",["127","128","129","130","131","132","133","134","135","136","137","138"],{"ruleId":"139","severity":1,"message":"140","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":13},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":54,"column":25,"nodeType":"149","endLine":54,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":55,"column":25,"nodeType":"149","endLine":55,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":82,"column":25,"nodeType":"149","endLine":82,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":83,"column":25,"nodeType":"149","endLine":83,"endColumn":42},{"ruleId":"139","severity":1,"message":"150","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":16},{"ruleId":"139","severity":1,"message":"151","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":12},{"ruleId":"139","severity":1,"message":"152","line":3,"column":16,"nodeType":"141","messageId":"142","endLine":3,"endColumn":24},{"ruleId":"139","severity":1,"message":"153","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":13},{"ruleId":"139","severity":1,"message":"154","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":158,"column":39,"nodeType":"157","messageId":"158","endLine":158,"endColumn":41},{"ruleId":"159","severity":1,"message":"160","line":254,"column":12,"nodeType":"161","messageId":"162","endLine":254,"endColumn":43},{"ruleId":"159","severity":1,"message":"160","line":277,"column":17,"nodeType":"161","messageId":"162","endLine":277,"endColumn":64},{"ruleId":"159","severity":1,"message":"160","line":300,"column":17,"nodeType":"161","messageId":"162","endLine":300,"endColumn":67},{"ruleId":"139","severity":1,"message":"163","line":358,"column":15,"nodeType":"141","messageId":"142","endLine":358,"endColumn":19},{"ruleId":"139","severity":1,"message":"164","line":359,"column":15,"nodeType":"141","messageId":"142","endLine":359,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":378,"column":25,"nodeType":"167","endLine":378,"endColumn":29},{"ruleId":"139","severity":1,"message":"150","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":55,"column":21,"nodeType":"149","endLine":55,"endColumn":38},{"ruleId":"139","severity":1,"message":"152","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":18},{"ruleId":"139","severity":1,"message":"168","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":18},{"ruleId":"139","severity":1,"message":"169","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":14},{"ruleId":"139","severity":1,"message":"168","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":18},{"ruleId":"139","severity":1,"message":"170","line":3,"column":9,"nodeType":"141","messageId":"142","endLine":3,"endColumn":16},{"ruleId":"139","severity":1,"message":"171","line":3,"column":18,"nodeType":"141","messageId":"142","endLine":3,"endColumn":34},{"ruleId":"139","severity":1,"message":"151","line":5,"column":9,"nodeType":"141","messageId":"142","endLine":5,"endColumn":13},{"ruleId":"139","severity":1,"message":"152","line":5,"column":15,"nodeType":"141","messageId":"142","endLine":5,"endColumn":23},{"ruleId":"155","severity":1,"message":"172","line":42,"column":31,"nodeType":"157","messageId":"158","endLine":42,"endColumn":33},{"ruleId":"173","severity":1,"message":"174","line":11,"column":5,"nodeType":"175","messageId":"176","endLine":13,"endColumn":6},{"ruleId":"177","severity":1,"message":"178","line":22,"column":25,"nodeType":"167","endLine":22,"endColumn":76},{"ruleId":"179","severity":1,"message":"180","line":23,"column":25,"nodeType":"167","endLine":23,"endColumn":80},{"ruleId":"177","severity":1,"message":"178","line":31,"column":37,"nodeType":"167","endLine":31,"endColumn":86},{"ruleId":"179","severity":1,"message":"180","line":32,"column":53,"nodeType":"167","endLine":32,"endColumn":107},{"ruleId":"177","severity":1,"message":"178","line":38,"column":37,"nodeType":"167","endLine":38,"endColumn":86},{"ruleId":"179","severity":1,"message":"180","line":39,"column":52,"nodeType":"167","endLine":39,"endColumn":109},{"ruleId":"177","severity":1,"message":"178","line":46,"column":33,"nodeType":"167","endLine":46,"endColumn":89},{"ruleId":"179","severity":1,"message":"180","line":47,"column":47,"nodeType":"167","endLine":47,"endColumn":103},{"ruleId":"173","severity":1,"message":"174","line":13,"column":5,"nodeType":"175","messageId":"176","endLine":15,"endColumn":6},{"ruleId":"177","severity":1,"message":"178","line":25,"column":25,"nodeType":"167","endLine":25,"endColumn":76},{"ruleId":"179","severity":1,"message":"180","line":26,"column":21,"nodeType":"167","endLine":26,"endColumn":76},{"ruleId":"177","severity":1,"message":"178","line":34,"column":29,"nodeType":"167","endLine":34,"endColumn":76},{"ruleId":"179","severity":1,"message":"180","line":35,"column":29,"nodeType":"167","endLine":35,"endColumn":83},{"ruleId":"177","severity":1,"message":"178","line":40,"column":29,"nodeType":"167","endLine":40,"endColumn":76},{"ruleId":"179","severity":1,"message":"180","line":41,"column":29,"nodeType":"167","endLine":41,"endColumn":83},{"ruleId":"177","severity":1,"message":"178","line":47,"column":29,"nodeType":"167","endLine":47,"endColumn":76},{"ruleId":"179","severity":1,"message":"180","line":48,"column":29,"nodeType":"167","endLine":48,"endColumn":86},{"ruleId":"177","severity":1,"message":"178","line":54,"column":33,"nodeType":"167","endLine":54,"endColumn":82},{"ruleId":"179","severity":1,"message":"180","line":55,"column":48,"nodeType":"167","endLine":55,"endColumn":105},{"ruleId":"177","severity":1,"message":"178","line":62,"column":33,"nodeType":"167","endLine":62,"endColumn":89},{"ruleId":"179","severity":1,"message":"180","line":63,"column":47,"nodeType":"167","endLine":63,"endColumn":103},{"ruleId":"155","severity":1,"message":"172","line":64,"column":23,"nodeType":"157","messageId":"158","endLine":64,"endColumn":25},{"ruleId":"155","severity":1,"message":"172","line":65,"column":23,"nodeType":"157","messageId":"158","endLine":65,"endColumn":25},{"ruleId":"155","severity":1,"message":"172","line":66,"column":32,"nodeType":"157","messageId":"158","endLine":66,"endColumn":34},{"ruleId":"155","severity":1,"message":"172","line":67,"column":26,"nodeType":"157","messageId":"158","endLine":67,"endColumn":28},{"ruleId":"155","severity":1,"message":"172","line":68,"column":28,"nodeType":"157","messageId":"158","endLine":68,"endColumn":30},{"ruleId":"155","severity":1,"message":"172","line":69,"column":27,"nodeType":"157","messageId":"158","endLine":69,"endColumn":29},{"ruleId":"155","severity":1,"message":"172","line":70,"column":24,"nodeType":"157","messageId":"158","endLine":70,"endColumn":26},{"ruleId":"155","severity":1,"message":"156","line":76,"column":28,"nodeType":"157","messageId":"158","endLine":76,"endColumn":30},{"ruleId":"155","severity":1,"message":"156","line":114,"column":28,"nodeType":"157","messageId":"158","endLine":114,"endColumn":30},{"ruleId":"155","severity":1,"message":"156","line":152,"column":31,"nodeType":"157","messageId":"158","endLine":152,"endColumn":33},{"ruleId":"155","severity":1,"message":"156","line":166,"column":31,"nodeType":"157","messageId":"158","endLine":166,"endColumn":33},{"ruleId":"139","severity":1,"message":"163","line":187,"column":13,"nodeType":"141","messageId":"142","endLine":187,"endColumn":17},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","no-native-reassign",["181"],"no-negated-in-lhs",["182"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'ReactDOM' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'axios' is defined but never used.","'Register' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'date' is assigned a value but never used.","'monthNames' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useState' is defined but never used.","'Navbar' is defined but never used.","'API_URL' is defined but never used.","'API_URL_EXPENSES' is defined but never used.","Expected '===' and instead saw '=='.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\index.js":"1","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\App.js":"2","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\reportWebVitals.js":"3","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Login.js":"4","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Dashboard.js":"5","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Register.js":"6","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\App.js":"7","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Navbar.js":"8","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\LoadingPage.js":"9","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Profile.js":"10","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\config.js":"11","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AdminNavbar.js":"12","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AddUser.js":"13","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AddExpense.js":"14","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\EditUser.js":"15","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\ManageExpense.js":"16","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\EditExpense.js":"17","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\CompareExpense.js":"18"},{"size":2150,"mtime":1619215527792,"results":"19","hashOfConfig":"20"},{"size":571,"mtime":1614190169325,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1614189518226,"results":"22","hashOfConfig":"20"},{"size":2691,"mtime":1618809925479,"results":"23","hashOfConfig":"20"},{"size":14032,"mtime":1619385112002,"results":"24","hashOfConfig":"20"},{"size":8517,"mtime":1618789500525,"results":"25","hashOfConfig":"20"},{"size":1500,"mtime":1618810159941,"results":"26","hashOfConfig":"20"},{"size":3569,"mtime":1619215180769,"results":"27","hashOfConfig":"20"},{"size":420,"mtime":1618809925478,"results":"28","hashOfConfig":"20"},{"size":7361,"mtime":1618810570005,"results":"29","hashOfConfig":"20"},{"size":540,"mtime":1619131996311,"results":"30","hashOfConfig":"20"},{"size":2903,"mtime":1618810097154,"results":"31","hashOfConfig":"20"},{"size":11670,"mtime":1618810082162,"results":"32","hashOfConfig":"20"},{"size":6273,"mtime":1619384563191,"results":"33","hashOfConfig":"20"},{"size":7254,"mtime":1618871405932,"results":"34","hashOfConfig":"20"},{"size":3761,"mtime":1619133581336,"results":"35","hashOfConfig":"20"},{"size":6226,"mtime":1619384591698,"results":"36","hashOfConfig":"20"},{"size":7757,"mtime":1619390608381,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"wjvfq2",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"41"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"41"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\index.js",["88"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport Login from './Components/Login'\r\nimport AddUser from './Components/AddUser'\r\nimport Register from './Components/Register'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Dashboard from './Components/Dashboard';\r\nimport LoadingPage from './Components/LoadingPage';\r\nimport Profile from './Components/Profile'\r\nimport AddExpense from './Components/AddExpense'\r\nimport ManageExpense from './Components/ManageExpense'\r\nimport EditUser from './Components/EditUser'\r\nimport EditExpense from './Components/EditExpense'\r\nimport CompareExpense from './Components/CompareExpense'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Route path = \"/\" exact component = {App}/>\r\n    <Route path = \"/CompareExpense\" exact component = {CompareExpense}/>\r\n    <Route path = \"/AddExpense\" exact component = {AddExpense}/>\r\n    <Route path = \"/ManageExpense\" exact component = {ManageExpense}/>\r\n    <Route path = \"/EditExpense\" exact component = {EditExpense}/>\r\n    <Route path = \"/AddUser\" exact component = {AddUser}/>\r\n    <Route path = \"/Login\" exact component = {App}/>\r\n    <Route path = \"/Register\" exact component = {Register}/>\r\n    <Route path = \"/Dashboard\" exact component = {Dashboard}/>\r\n    <Route path = \"/Profile/:username\" exact component = {Profile}/>\r\n    <Route path = \"/EditUser\" exact component = {EditUser}/>\r\n    <Route path = \"/Register/Success\" exact render = {(props) => <LoadingPage {...props} status = \"Successfully Registered\" button = \"/\" buttonText = \"Return to login\"/>}/>\r\n    <Route path = \"/AddExpense/Success\" exact render = {(props) => <LoadingPage {...props} status = \"Successfully added\" button = \"/\" buttonText = \"Return to Home\" />}/>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["89","90"],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\App.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\reportWebVitals.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Login.js",["91","92","93","94","95"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Link, { Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport '../Styles/Custom.scss'\r\nimport Register from './Register'\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userID: \"\",\r\n            password: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let newUserID = this.state.userID\r\n        let newPassword = this.state.password\r\n        if (event.target.name === \"userID\"){\r\n            newUserID = event.target.value\r\n        }\r\n        else if (event.target.name === \"password\") {\r\n            newPassword = event.target.value\r\n        }\r\n        this.setState({\r\n            userID: newUserID,\r\n            password: newPassword\r\n        });\r\n        \r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n        this.setState({\r\n            userID: this.state.userID,\r\n            password: this.state.password\r\n        });\r\n\r\n        this.props.Login({userID: this.state.userID, password: this.state.password})\r\n       \r\n               \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div id=\"loginContainer\">\r\n                <h1>Login</h1>\r\n                <Form className = \"loginForm\" id = \"login\" onSubmit = {this.handleSubmit}>\r\n                    <Form.Group controlid = \"userIDForm\" >\r\n                        <Form.Label className = \"label1\">Username</Form.Label>\r\n                        <Form.Control type = \"text\" name = \"userID\" placeholder = \"Enter username\" className = \"input1\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlid = \"passForm\">\r\n                        <Form.Label className = \"label1\">Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" placeholder = \"Enter password\" className = \"input1\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.props.errors}</Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group className = \"btn1\">\r\n                        <Button variant = \"primary\" type = \"submit\" >Login</Button>\r\n                        <Button href='/Register' variant = \"primary\" className = \"link1\">Register an Account</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Dashboard.js",["96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Navbar from './Navbar'\r\nimport AdminNavbar from './AdminNavbar'\r\nimport axios from 'axios'\r\nimport {API_URL_USERS, API_URL_USER_DELETE, API_URL } from '../config'\r\nimport {Table} from 'react-bootstrap'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userID: this.props.location.state[\"user\"],\r\n            userType: this.props.location.state[\"userType\"],\r\n            user: {},\r\n            customers: [{}],\r\n            expenses: [{}],\r\n            monthlyReport: [{}]\r\n        }\r\n        this.getCustomersTable = this.getCustomersTable.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let date = new Date()\r\n        \r\n        if (this.state.userType === \"admin\") {\r\n            axios.get(API_URL_USERS)\r\n            .then((response) => {\r\n                this.setState({customers: response.data})\r\n            })\r\n        }\r\n        else if (this.state.userType === \"customer\") {\r\n            axios.get(API_URL_USERS + '/' + this.state.userID)\r\n            .then((response) => {\r\n                this.setState({user: response.data})\r\n            })\r\n            \r\n            axios.get(API_URL + \"/expenses/\" + this.state.userID + \"/year/\" + date.getFullYear())\r\n            .then((response) => {\r\n                this.setState({expenses: response.data})\r\n                console.log(response.data)\r\n            })\r\n\r\n            axios.get(API_URL + \"/expenses/\" + this.state.userID + \"/monthly/\" + date.getFullYear())\r\n            .then((response) => {\r\n                this.setState({monthlyReport: response.data})\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDelete(index) {\r\n        let userID = document.getElementById(\"userID\" + index).innerHTML\r\n        axios.delete(API_URL_USER_DELETE + '/' + userID)\r\n        .then((response) => {\r\n            //update customers table\r\n            axios.get(API_URL_USERS)\r\n                .then((response) => {\r\n                    this.setState({customers: response.data})\r\n                })\r\n        })\r\n    }\r\n\r\n    handleEdit(index) {\r\n        let userID = document.getElementById(\"userID\" + index).innerHTML\r\n        this.props.history.push({pathname: '/EditUser', state: {admin: this.state.userID, user: userID}})\r\n    }\r\n\r\n    getCustomersTable() {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>UserID</th>\r\n                            <th>Email</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {(this.state.customers).map((element, index) => {\r\n                            return(\r\n                            <tr id = {\"row\" + index}>\r\n                                <td id = {\"userID\" + index}>{element.userID}</td>\r\n                                <td>{element.email}</td>\r\n                                <td>{element.fname}</td>\r\n                                <td>{element.lname}</td>\r\n                                <td><button type=\"button\" name=\"\" id=\"\" class=\"btn btn-primary\" btn-lg btn-block onClick = {() => this.handleEdit(index)}>Edit</button></td>\r\n                                <td><button type=\"button\" name=\"\" id=\"\" class=\"btn btn-primary\" btn-lg btn-block onClick = {() => this.handleDelete(index)}>Delete</button></td>\r\n                            </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    updateMonthlyData() {\r\n        let array = [['Month', 'Amount']];\r\n        this.state.monthlyReport.forEach(element => {\r\n            array.push([element.month, element.amount])\r\n        });\r\n        return array\r\n    }\r\n    \r\n    updateCategoricalPieData() {\r\n        let rentTotal = 0;\r\n        let entertainmentTotal = 0;\r\n        let utilityTotal = 0;\r\n        let foodTotal = 0;\r\n        let businessTotal = 0;\r\n        let groceriesTotal = 0;\r\n        let otherTotal = 0;\r\n        this.state.expenses.forEach(element => {\r\n            \r\n            switch(element.category) {\r\n                case \"Food\":\r\n                    foodTotal += element.amount\r\n                    break;\r\n                case \"Rent/Mortgage\":\r\n                    rentTotal += element.amount\r\n                    break;\r\n                case \"Entertainment\":\r\n                    entertainmentTotal += element.amount\r\n                    break;\r\n                case \"Utility\":\r\n                    utilityTotal += element.amount\r\n                    break;\r\n                case \"Business\":\r\n                    businessTotal += element.amount;\r\n                    break;\r\n                case \"Groceries\":\r\n                    groceriesTotal += element.amount\r\n                    break;\r\n                default:\r\n                    otherTotal += element.amount\r\n            }\r\n        });\r\n        let arr = [['Category', 'Amount'], \r\n            foodTotal == 0 ? ['', ''] : ['Food', foodTotal],\r\n            rentTotal == 0 ? ['', ''] : ['Rent/Mortgage', rentTotal],\r\n            entertainmentTotal == 0 ? ['', ''] : ['Entertainment', entertainmentTotal],\r\n            utilityTotal == 0 ? ['', ''] : ['Utility', utilityTotal],\r\n            groceriesTotal == 0 ? ['', ''] : ['Groceries', groceriesTotal],\r\n            businessTotal == 0 ? ['', ''] : ['Business', businessTotal],\r\n            otherTotal == 0 ? ['', ''] : ['Other', otherTotal] ];\r\n        return arr;\r\n    }\r\n\r\n\r\n    getExpensesByMonth() {\r\n        if(this.state.expenses.length != 0) {\r\n            return (\r\n                <Chart\r\n                    width={'1000px'}\r\n                    height={'700px'}\r\n                    chartType=\"PieChart\"\r\n                    loader={<div>Loading Expense Chart</div>}\r\n                    data={this.updateMonthlyData()}\r\n                    options={{\r\n                        title: 'Expenses By Month',\r\n                        'backgroundColor': 'transparent',\r\n                        pieHole: 0.4,\r\n                        legend: {\r\n                            position: \"bottom\",\r\n                            textStyle: {\r\n                              color: \"233238\",\r\n                              fontSize: 14\r\n                            }\r\n                          },\r\n                          chartArea: {\r\n                            left: 100,\r\n                            top: 100,\r\n                            width: \"90%\",\r\n                            height: \"80%\"\r\n                          },\r\n                    }}\r\n                    rootProps={{ 'data-testid': '3' }}\r\n                />\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <h1>No Expenses</h1>\r\n            )\r\n        }\r\n    }\r\n\r\n    getCategoricalPieGraph() {\r\n\r\n        if(this.state.expenses.length != 0) {\r\n            return (\r\n                <Chart\r\n                    width={'1000px'}\r\n                    height={'700px'}\r\n                    chartType=\"PieChart\"\r\n                    loader={<div>Loading Expense Chart</div>}\r\n                    data={this.updateCategoricalPieData()}\r\n                    options={{\r\n                        title: 'Expenses By Category',\r\n                        'backgroundColor': 'transparent',\r\n                        pieHole: 0.4,\r\n                        legend: {\r\n                            position: \"bottom\",\r\n                            textStyle: {\r\n                                color: \"233238\",\r\n                                fontSize: 14\r\n                            }\r\n                            },\r\n                        chartArea: {\r\n                            left: 100,\r\n                            top: 100,\r\n                            width: \"90%\",\r\n                            height: \"80%\"\r\n                        },\r\n                    }}\r\n                    rootProps={{ 'data-testid': '3' }}\r\n                />\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <h1>No Expenses</h1>\r\n            )\r\n        }    \r\n    }\r\n    \r\n\r\n    getMonthlyReport() {\r\n        let total = 0;\r\n        this.state.expenses.forEach(element => {\r\n            total += element.amount\r\n        });\r\n        \r\n        return (\r\n            <div>\r\n                <h2>Expenses: ${total}</h2><br/>\r\n                <h2>Income: ${(this.state.user.annIncome / 12).toFixed(2)}</h2><br/>\r\n                <h2>Savings: $ {((this.state.user.annIncome / 12) - total).toFixed(2)} </h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    printTaxBracket(){\r\n        //Based on 2019 tax data\r\n        let tax_bracket;\r\n        let user = this.state.user\r\n        if(user[\"filingStatus\"] = \"Single\") {\r\n            if(user[\"annIncome\"] <= 9700) {\r\n                tax_bracket = 0.10;\r\n            }\r\n            else if(user[\"annIncome\"] <= 39475) {\r\n                tax_bracket = 0.12;\r\n            }\r\n            else if(user[\"annIncome\"] <= 84200) {\r\n                tax_bracket = 0.22;\r\n            }\r\n            else if(user[\"annIncome\"] <= 160725) {\r\n                tax_bracket = 0.24;\r\n            }\r\n            else if(user[\"annIncome\"] <= 204100) {\r\n                tax_bracket = 0.32;\r\n            }\r\n            else if(user[\"annIncome\"] <= 520300) {\r\n                tax_bracket = 0.35;\r\n            }\r\n            else {\r\n                tax_bracket = 0.37;\r\n            }\r\n        }\r\n        else if(user[\"filingStatus\"] = \"Married filing jointly\") {\r\n            if(user[\"annIncome\"] <= 19400) {\r\n                tax_bracket = 0.10;\r\n            }\r\n            else if(user[\"annIncome\"] <= 78950) {\r\n                tax_bracket = 0.12;\r\n            }\r\n            else if(user[\"annIncome\"] <= 168400) {\r\n                tax_bracket = 0.22;\r\n            }\r\n            else if(user[\"annIncome\"] <= 321450) {\r\n                tax_bracket = 0.24;\r\n            }\r\n            else if(user[\"annIncome\"] <= 408200) {\r\n                tax_bracket = 0.32;\r\n            }\r\n            else if(user[\"annIncome\"] <= 612350) {\r\n                tax_bracket = 0.35;\r\n            }\r\n            else {\r\n                tax_bracket = 0.37;\r\n            }\r\n        }\r\n        else if(user[\"filingStatus\"] = \"Married filing separately\") {\r\n            if(user[\"annIncome\"] <= 9700) {\r\n                tax_bracket = 0.10;\r\n            }\r\n            else if(user[\"annIncome\"] <= 39475) {\r\n                tax_bracket = 0.12;\r\n            }\r\n            else if(user[\"annIncome\"] <= 84200) {\r\n                tax_bracket = 0.22;\r\n            }\r\n            else if(user[\"annIncome\"] <= 160725) {\r\n                tax_bracket = 0.24;\r\n            }\r\n            else if(user[\"annIncome\"] <= 204100) {\r\n                tax_bracket = 0.32;\r\n            }\r\n            else if(user[\"annIncome\"] <= 306175) {\r\n                tax_bracket = 0.35;\r\n            }\r\n            else {\r\n                tax_bracket = 0.37;\r\n            }\r\n        }else{\r\n            if(user[\"annIncome\"] <= 13850){\r\n                tax_bracket = 0.10;\r\n            }else if(user[\"annIncome\"] <= 52850){\r\n                tax_bracket = 0.12;\r\n            }else if(user[\"annIncome\"] <= 84200){\r\n                tax_bracket = 0.22;\r\n            }else if(user[\"annIncome\"] <= 160700){\r\n                tax_bracket = 0.24;\r\n            }else if(user[\"annIncome\"] <= 204100){\r\n                tax_bracket = 0.32;\r\n            }else if(user[\"annIncome\"] <= 510300){\r\n                tax_bracket = 0.35;\r\n            }else{\r\n                tax_bracket = 0.37;\r\n            }\r\n        }\r\n        let tax_brack_statement=\"Your tax bracket is \" + tax_bracket;\r\n        return(\r\n            <div>\r\n                <hr/>\r\n                <h1>\r\n                    Tax Bracket: {tax_bracket}\r\n                </h1>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n            \r\n\r\n\r\n    render() {\r\n        const table = this.getCustomersTable()\r\n        const monthlyPieChart = this.getExpensesByMonth()\r\n        const monthlyReport = this.getMonthlyReport()\r\n        const categoricalPieGraph = this.getCategoricalPieGraph()\r\n        const date = new Date()\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        return (\r\n            <div>\r\n                \r\n                {this.state.userType === \"customer\" ?\r\n                    <div>\r\n                        <Navbar user = {this.state.userID} userType = {this.state.userType}/>\r\n                        <h2>Welcome, {this.state.userID}</h2>\r\n                        <br></br>\r\n                        <h1>Annual Budget Spread</h1><hr/>\r\n                        <table>\r\n                            <tr>\r\n                                <td>{monthlyPieChart}</td>\r\n                                <td>{categoricalPieGraph}</td>\r\n                            </tr>\r\n                        </table>\r\n                        \r\n                        <h2></h2>\r\n                        {monthlyReport}\r\n                        {this.printTaxBracket()}\r\n                    </div>\r\n                : <div>\r\n                    <AdminNavbar user = {this.state.userID} userType = {this.state.userType}/>\r\n                    Welcome, {this.state.userID}<br></br>\r\n                    CUSTOMERS:<br></br>\r\n                    {table}\r\n                    \r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Register.js",["115","116"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport '../Styles/Custom.scss'\r\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\n\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            registered: false,\r\n            input: {},\r\n            errors: {}\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount () {\r\n        let input = this.state.input\r\n        input[\"filingStatus\"] = document.getElementById(\"filingStatus\").value\r\n        this.setState({registered: false, input:input, errors:this.state.errors})\r\n    }\r\n\r\n    handleChange(event) {\r\n        let input = this.state.input;\r\n        input[event.target.name] = event.target.value;\r\n      \r\n        this.setState({\r\n            registered: false,\r\n            input:input,\r\n            errors: this.state.errors\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.validate()) {\r\n            axios.post(API_URL + '/users/register', {\r\n                userID: this.state.input.username,\r\n                email: this.state.input[\"email\"],\r\n                password: this.state.input[\"password\"],\r\n                fname: this.state.input[\"fname\"],\r\n                lname: this.state.input[\"lname\"],\r\n                userType: \"customer\",\r\n                dob: this.state.input[\"dob\"],\r\n                annIncome: this.state.input[\"annualIncome\"],\r\n                filingStatus: this.state.input[\"filingStatus\"]\r\n            }).then((response) => {\r\n                if (response.data === 'User exists') { \r\n                    this.state.errors.usernameExists = \"Username exists, try a different one.\"\r\n                \r\n                    this.setState( {\r\n                        registered: false,\r\n                        input: this.state.input,\r\n                        errors: this.state.errors\r\n                    } ) \r\n                }\r\n                else {\r\n                    this.setState ({registered: true, input : {}, errors : {}})\r\n                }\r\n            \r\n            }\r\n            )     \r\n        }\r\n    }      \r\n    \r\n    \r\n    validate() {\r\n        \r\n        let valid = true;\r\n        let input = this.state.input;\r\n        let errors = this.state.errors;\r\n        let dob = new Date(input[\"dob\"])\r\n        let today = new Date()\r\n        if(input[\"password\"] !== input[\"confirmPassword\"]){\r\n                errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmPassword\"] = \"\";\r\n        }\r\n        if(input[\"email\"] !== input[\"confirmEmail\"]){\r\n                errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmEmail\"] = \"\";\r\n        }\r\n        if(input[\"filingStatus\"] === \"\" || input[\"filingStatus\"] === null){\r\n            errors[\"filingStatus\"] = \"Please select a filing status.\"\r\n            valid = false;\r\n        }\r\n        if (dob > today){\r\n            errors[\"birthdayError\"] = \"Birthday cannot be a future date.\"\r\n            valid = false;\r\n        }\r\n        else {\r\n            errors[\"birthdayError\"] = \"\"\r\n        }\r\n    \r\n        this.setState({errors:errors});\r\n        return valid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n        <div id=\"registerContainer\">\r\n            {this.state.registered && (<Redirect to=\"/Register/Success\"/>)}\r\n            <h1>Create an Account</h1>\r\n            <Form onSubmit = {this.handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFName\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"fname\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridLName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"lname\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formEmail\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type = \"email\" name = \"email\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmEmail}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm Email Address</Form.Label>\r\n                        <Form.Control type = \"email\"  name = \"confirmEmail\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type = \"text\" name = \"username\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"usernameExists\">{this.state.errors.usernameExists}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formPassword\">\r\n                        <Form.Label>Create a Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmPassword}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"confirmPassword\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBirthday\">\r\n                        <Form.Label>Birthday</Form.Label>\r\n                        \r\n                        <Form.Control type = \"date\" name = \"dob\"  onChange = {this.handleChange} required />\r\n                        <Form.Text className = \"birthdayValidate\">{this.state.errors.birthdayError}</Form.Text>     \r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formFilingStatus\">\r\n                    <Form.Label>Filing Status</Form.Label>\r\n                    <Form.Control as=\"select\"  name = \"filingStatus\" id = \"filingStatus\" onChange = {this.handleChange} required>\r\n                        <option>Single</option>\r\n                        <option>Married filing jointly</option>\r\n                        <option>Married filing seperately</option>\r\n                        <option>Head of household</option>\r\n                    </Form.Control>\r\n                    <Form.Text className = \"confirmPass\">{this.state.errors.filingStatus}</Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formAnnualIncome\"  required>\r\n                    <Form.Label>Annual Income</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type = \"number\" min={0} name = \"annualIncome\" onChange = {this.handleChange} />\r\n                    </InputGroup>\r\n                    \r\n                    </Form.Group>               \r\n                </Form.Row>\r\n                <Form.Group className = \"btn1\">\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                    <Button href='/' variant = \"primary\" className = \"link1\">Return to Login</Button>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Register;","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\App.js",["117","118","119","120"],"import '../Styles/Custom.scss'\r\nimport { useState } from 'react';\r\nimport Dashboard from './Dashboard';\r\nimport Navbar from './Navbar'\r\nimport Login from './Login';\r\nimport axios from 'axios'\r\nimport { Redirect, Link} from 'react-router-dom'\r\nimport { API_URL} from '../config'\r\n\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState(\"\")\r\n  const [loginErrors, setErrors] = useState(\"\")\r\n  const [userType, setUserType] = useState(\"\")\r\n\r\n  const logout = () => {\r\n    setUser(\"\");\r\n    <Link to =\"\"/>\r\n  }\r\n\r\n  const loggedIn = credentials => {\r\n\r\n    axios.post(API_URL + '/users/authenticate', {\r\n      userID: credentials.userID,\r\n      password: credentials.password})\r\n        .then((response) => {\r\n            let newLoggedIn = false;\r\n            if (response.data === \"Customer Permission Granted\") {\r\n              setUserType(\"customer\")\r\n              newLoggedIn = true;\r\n              setUser(credentials.userID)\r\n            }\r\n            else if (response.data === \"Admin Permission Granted\") {\r\n              setUserType(\"admin\")\r\n              newLoggedIn = true;\r\n              setUser(credentials.userID)\r\n            }\r\n            else\r\n              setErrors(response.data)\r\n        });\r\n         \r\n          \r\n  }\r\n      \r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {user === \"\" ? <Login Login = {loggedIn} errors = {loginErrors}/> : <Redirect to= {{pathname: '/Dashboard', state: {user: user, userType: userType}}}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Navbar.js",["121","122","123","124","125","126","127","128","129","130","131","132","133"],"import React from 'react'\r\nimport logoutIcon from './Images/logout-icon.svg'\r\nimport moneyIcon from './Images/money.svg'\r\nimport plusIcon from './Images/plus-icon.svg'\r\nimport profileIcon from './Images/profile-icon.svg'\r\nimport editIcon from './Images/editIcon.svg'\r\nimport compareIcon from './Images/compare.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return (\r\n            \r\n            <div>\r\n                <nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                    <Link to = {{pathname: '/Dashboard', state: {user: this.props.user, userType: this.props.userType}}}>\r\n                        <a class=\"navbar-brand\" style = {{color: \"white\"}}>Where's My Money?\r\n                    <img src={moneyIcon} style = {{height: 30, width: 40}}></img>\r\n                    </a>\r\n                    </Link>\r\n                    \r\n                \r\n                    <div class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                        <Link to = {{pathname: '/AddExpense', state: {user: this.props.user, userType: this.props.userType}}}>\r\n                            <a class=\"nav-link\" style = {{color: \"white\"}}>Add Expense\r\n                            <img src={plusIcon} style = {{height: 30, width: 40}}></img>\r\n                            </a>\r\n                        </Link>\r\n                        <li class=\"nav-item active\">\r\n                        <Link to = {{pathname: '/ManageExpense', state: {user: this.props.user, userType: this.props.userType}}}>\r\n                            <a class=\"nav-link\" style = {{color: \"white\"}}> Manage Expenses\r\n                            <img src={editIcon} style = {{height: 30, width: 40}}></img>\r\n                            </a>\r\n                        </Link>\r\n                        </li>\r\n                        <li class=\"nav-item active\">\r\n                        <Link to = {{pathname: '/CompareExpense', state: {user: this.props.user, userType: this.props.userType}}}>\r\n                            <a class=\"nav-link\" style = {{color: \"white\"}}> Compare Expense\r\n                            <img src={compareIcon} style = {{height: 30, width: 40}}></img>\r\n                            </a>\r\n                        </Link>\r\n                        </li>\r\n                        <li class=\"nav-item active\">\r\n                            <Link to = {{pathname: '/Profile/' + this.props.user, state: {userType: this.props.userType}}}>\r\n                                <a class = 'nav-link' style = {{color: \"white\"}}>\r\n                                Profile <span ><img src={profileIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                </a>\r\n                            </Link>\r\n                        </li>           \r\n                        </ul>\r\n                        <form class=\"form-inline my-2 my-lg-0\">\r\n                            <Link to = ''>\r\n                                <a class = 'nav-item active' style = {{color: \"white\"}}>\r\n                                Logout <span ><img src={logoutIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                </a>\r\n                            </Link>\r\n                        \r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    \r\n    }\r\n}\r\nexport default Navbar\r\n\r\n\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\LoadingPage.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\Profile.js",["134"],"import React, { Component } from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_URL_UPDATE_USER, API_URL_USERS } from '../config'\r\nimport Navbar from './Navbar'\r\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap'\r\nimport AdminNavbar from './AdminNavbar'\r\n\r\nexport default class Profile extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            user : {},\r\n            userType: this.props.location.state[\"userType\"],\r\n            errors: {}\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {username} = this.props.match.params\r\n        axios.get(API_URL_USERS + '/' + username)\r\n        .then((response) => {\r\n            this.setState({user: response.data})\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        let user = this.state.user;\r\n        user[event.target.name] = event.target.value;\r\n        this.setState({user : user});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        if (this.validate()) {\r\n            event.preventDefault()\r\n            axios.post(API_URL_UPDATE_USER, {\r\n                userID: this.state.user[\"userID\"],\r\n                email: this.state.user[\"email\"],\r\n                password: this.state.user[\"password\"],\r\n                fname: this.state.user[\"fname\"],\r\n                lname: this.state.user[\"lname\"],\r\n                userType: this.state.user[\"userType\"],\r\n                dob: this.state.user[\"dob\"],\r\n                annIncome: this.state.user[\"annIncome\"],\r\n                filingStatus: this.state.user[\"filingStatus\"]\r\n            }).then((response) => {\r\n                let errors = this.state.errors\r\n                if (response.data === \"User updated\"){ \r\n                    errors[\"update\"] = \"Profile successfully updated!\"\r\n                    this.setState({errors: errors})\r\n                }})\r\n    \r\n        }\r\n    }\r\n    \r\n\r\n    validate() {\r\n        let user = this.state.user;\r\n        let valid = true\r\n        let errors = this.state.errors\r\n\r\n        if(user[\"password\"] !== user[\"confirmPassword\"]){\r\n                errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmPassword\"] = \"\";\r\n        }\r\n        if(user[\"email\"] !== user[\"confirmEmail\"]){\r\n                errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmEmail\"] = \"\";\r\n        }\r\n        if(user[\"filingStatus\"] === \"\" || user[\"filingStatus\"] === null){\r\n            errors[\"filingStatus\"] = \"Please select a filing status.\"\r\n        }\r\n    \r\n        this.setState({user: user, errors:errors});\r\n        console.log(valid)\r\n        return valid;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.userType === \"customer\" ? \r\n                    <Navbar user = {this.state.user[\"userID\"]} userType = {this.state.userType}/> : <AdminNavbar user = {this.state.user[\"userID\"]} userType = {this.state.userType}></AdminNavbar> }\r\n                <h1>Edit Profile</h1>\r\n                <Form onSubmit = {this.handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFName\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"fname\" onChange = {this.handleChange} value = {this.state.user[\"fname\"]} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridLName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"lname\" onChange = {this.handleChange} value = {this.state.user[\"lname\"]} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formEmail\">\r\n                        <Form.Label>New Email Address</Form.Label>\r\n                        <Form.Control type = \"email\" name = \"email\" onChange = {this.handleChange} value = {this.state.user[\"email\"]} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors[\"confirmEmail\"]}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm New Email Address</Form.Label>\r\n                        <Form.Control type = \"email\"  name = \"confirmEmail\" onChange = {this.handleChange}  required/>\r\n                    </Form.Group>\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                \r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formPassword\">\r\n                        <Form.Label>Change Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" onChange = {this.handleChange} value = {this.state.user[\"password\"]} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors[\"confirmPassword\"]}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm New Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"confirmPassword\" onChange = {this.handleChange}   required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                   \r\n                    <Form.Group as={Col} controlId=\"formFilingStatus\">\r\n                    <Form.Label>Filing Status</Form.Label>\r\n                    <Form.Control as=\"select\"  name = \"filingStatus\" id = \"filingStatus\" onChange = {this.handleChange} value = {this.state.user[\"filingStatus\"]} required>\r\n                        <option>Single</option>\r\n                        <option>Married filing jointly</option>\r\n                        <option>Married filing seperately</option>\r\n                        <option>Head of household</option>\r\n                    </Form.Control>\r\n                    \r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Col} controlId=\"formAnnualIncome\"  required>\r\n                    <Form.Label>Annual Income</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type = \"number\" min={0} name = \"annIncome\" onChange = {this.handleChange} value = {this.state.user[\"annIncome\"]}  />\r\n                    </InputGroup>\r\n                    \r\n                    </Form.Group> \r\n                </Form.Row>\r\n\r\n                <Form.Group className = \"btn1\">\r\n                    <Button variant=\"primary\" type=\"submit\" onclick={this.printTaxBracket}>\r\n                        Save Changes\r\n                    </Button>\r\n                    <Form.Text className = \"updateStatus\">{this.state.errors[\"update\"]}</Form.Text>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\config.js",[],"C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AdminNavbar.js",["135","136","137","138","139","140","141","142","143"],"import React from 'react'\r\nimport logoutIcon from './Images/logout-icon.svg'\r\nimport moneyIcon from './Images/money.svg'\r\nimport plusIcon from './Images/plus-icon.svg'\r\nimport profileIcon from './Images/profile-icon.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass AdminNavbar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n       \r\n        return (\r\n            \r\n            <div>\r\n                <nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                    <Link to = {{pathname: '/Dashboard', state: {user: this.props.user, userType: this.props.userType}}}>\r\n                        <a class=\"navbar-brand\" style = {{color: \"white\"}}>Where's My Money?\r\n                        <img src={moneyIcon} style = {{height: 30, width: 40}}></img>\r\n                        </a>\r\n                    </Link>\r\n                \r\n                    <div class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            <li class=\"nav-item active\">\r\n                                <Link to = {{pathname: '/AddUser/', state: {user: this.props.user, userType: this.props.userType}}}>\r\n                                    <a class = 'nav-link' style = {{color: \"white\"}}>\r\n                                    Add User <span ><img src={plusIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                    </a>\r\n                                </Link>\r\n                            </li>\r\n                            <li class=\"nav-item active\">\r\n                                <Link to = {{pathname: '/Profile/' + this.props.user, state: {userType: this.props.userType}}}>\r\n                                    <a class = 'nav-link' style = {{color: \"white\"}}>\r\n                                    Profile <span ><img src={profileIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                    </a>\r\n                                </Link>\r\n                            </li>           \r\n                        </ul>\r\n                        <form class=\"form-inline my-2 my-lg-0\">\r\n                            <Link to = ''>\r\n                                <a class = 'nav-item active' style = {{color: \"white\"}}>\r\n                                Logout <span ><img src={logoutIcon} style = {{height: 30, width: 30}}></img></span>\r\n                                </a>\r\n                            </Link>\r\n                            {/* <button class=\"btn\" style = {{color: \"white\"}} onSubmit = {this.handleSubmit} >\r\n                                    \r\n                            </button> */}\r\n                        \r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n        \r\n}\r\n}\r\nexport default AdminNavbar\r\n\r\n\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AddUser.js",["144","145","146","147","148","149","150"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport '../Styles/Custom.scss'\r\nimport {Form, Button, Col, InputGroup, ToggleButtonGroup, ToggleButton} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport AdminNavbar from './AdminNavbar'\r\nimport { ThemeConsumer } from 'react-bootstrap/esm/ThemeProvider'\r\n\r\n\r\nclass AddUser extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            registered: false,\r\n            input: {filingStatus: \"Single\"},\r\n            errors: {}\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount () {\r\n        let input = this.state.input\r\n        input[\"userType\"] = \"customer\"\r\n        this.setState({registered: false, input:input, errors:this.state.errors})\r\n    }\r\n\r\n    handleChange(event) {\r\n        let input = this.state.input;\r\n        input[event.target.name] = event.target.value;\r\n        this.setState({\r\n            registered: false,\r\n            input:input,\r\n            errors: this.state.errors\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.validate()) {\r\n            if (this.state.input[\"userType\"] === 'customer') {\r\n                axios.post(API_URL + '/users/register', {\r\n                    userID: this.state.input.username,\r\n                    email: this.state.input[\"email\"],\r\n                    password: this.state.input[\"password\"],\r\n                    fname: this.state.input[\"fname\"],\r\n                    lname: this.state.input[\"lname\"],\r\n                    userType: this.state.input[\"userType\"],\r\n                    dob: this.state.input[\"dob\"],\r\n                    annIncome: this.state.input[\"annualIncome\"],\r\n                    filingStatus: this.state.input[\"filingStatus\"]\r\n                }).then((response) => {\r\n                    if (response.data === 'User exists') { \r\n                        this.state.errors.usernameExists = \"Username exists, try a different one.\"\r\n                        this.state.errors[\"output\"] = response.data\r\n                        this.setState( {\r\n                            registered: false,\r\n                            input: this.state.input,\r\n                            errors: this.state.errors\r\n                        } ) \r\n                    }\r\n                    else {\r\n                        this.setState ({registered: true, input : {filingStatus: \"Single\"}, errors : {output: response.data}})\r\n                    }\r\n                \r\n                }\r\n                )\r\n            }\r\n            else {\r\n                axios.post(API_URL + '/users/register', {\r\n                    userID: this.state.input.username,\r\n                    email: this.state.input[\"email\"],\r\n                    password: this.state.input[\"password\"],\r\n                    fname: this.state.input[\"fname\"],\r\n                    lname: this.state.input[\"lname\"],\r\n                    userType: this.state.input[\"userType\"],\r\n                    dob: new Date(),\r\n                    annIncome: 0,\r\n                    filingStatus: \"Single\"\r\n                }).then((response) => {\r\n                    if (response.data === 'User exists') { \r\n                        this.state.errors.usernameExists = \"Username exists, try a different one.\"\r\n                        this.state.errors[\"output\"] = response.data\r\n                        this.setState( {\r\n                            registered: false,\r\n                            input: this.state.input,\r\n                            errors: this.state.errors\r\n                        } ) \r\n                    }\r\n                    else {\r\n                        this.setState ({registered: true, input : {filingStatus: \"Single\"}, errors : {output: response.data}})\r\n                    }\r\n                \r\n                }\r\n                )\r\n            }\r\n        }\r\n    }      \r\n    \r\n    \r\n    validate() {\r\n        \r\n        let valid = true;\r\n        let input = this.state.input;\r\n        let errors = this.state.errors;\r\n        let dob = new Date(input[\"dob\"])\r\n        let today = new Date()\r\n        if (input[\"userType\"] === 'customer') {\r\n\r\n        \r\n            if(input[\"password\"] !== input[\"confirmPassword\"]){\r\n                    errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                    valid = false;\r\n            }\r\n            else {\r\n                errors[\"confirmPassword\"] = \"\";\r\n            }\r\n            if(input[\"email\"] !== input[\"confirmEmail\"]){\r\n                    errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                    valid = false;\r\n            }\r\n            else {\r\n                errors[\"confirmEmail\"] = \"\";\r\n            }\r\n            if(input[\"filingStatus\"] === \"\" || input[\"filingStatus\"] === null){\r\n                errors[\"filingStatus\"] = \"Please select a filing status.\"\r\n            }\r\n            if (dob > today){\r\n                errors[\"birthdayError\"] = \"Birthday cannot be a future date.\"\r\n            }\r\n            else {\r\n                errors[\"birthdayError\"] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            if(input[\"password\"] !== input[\"confirmPassword\"]){\r\n                errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                valid = false;\r\n            }\r\n            else {\r\n                errors[\"confirmPassword\"] = \"\";\r\n            }\r\n            if(input[\"email\"] !== input[\"confirmEmail\"]){\r\n                    errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                    valid = false;\r\n            }\r\n            else {\r\n                errors[\"confirmEmail\"] = \"\";\r\n            }\r\n        }\r\n    \r\n        this.setState({errors:errors});\r\n        return valid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n        <div >\r\n            <AdminNavbar user = {this.props.location.state[\"user\"]} userType = {this.props.location.state[\"userType\"]}></AdminNavbar>\r\n            <h1>Add User</h1>\r\n            <Form onSubmit = {this.handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFName\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"fname\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridLName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"lname\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formEmail\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type = \"email\" name = \"email\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmEmail}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm Email Address</Form.Label>\r\n                        <Form.Control type = \"email\"  name = \"confirmEmail\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type = \"text\" name = \"username\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"usernameExists\">{this.state.errors.usernameExists}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formPassword\">\r\n                        <Form.Label>Create a Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" onChange = {this.handleChange} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors.confirmPassword}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"confirmPassword\" onChange = {this.handleChange} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formUserType\" required>\r\n                        <Form.Label>User Type</Form.Label><br></br>\r\n                        <ToggleButtonGroup name=\"userType\" type=\"radio\" className=\"mb-2\" defaultValue={'customer'}>\r\n                            <ToggleButton value={'customer'} onChange = {this.handleChange} >Customer</ToggleButton>\r\n                            <ToggleButton value={'admin'} onChange = {this.handleChange} >Admin</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                {this.state.input[\"userType\"] === 'customer' ? <div>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBirthday\">\r\n                        <Form.Label>Birthday</Form.Label>\r\n                        \r\n                        <Form.Control type = \"date\" name = \"dob\"  onChange = {this.handleChange} required />\r\n                        <Form.Text className = \"birthdayValidate\">{this.state.errors.birthdayError}</Form.Text>     \r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formFilingStatus\">\r\n                    <Form.Label>Filing Status</Form.Label>\r\n                    <Form.Control as=\"select\"  name = \"filingStatus\" id = \"filingStatus\" onChange = {this.handleChange} required>\r\n                        <option>Single</option>\r\n                        <option>Married filing jointly</option>\r\n                        <option>Married filing seperately</option>\r\n                        <option>Head of household</option>\r\n                    </Form.Control>\r\n                    <Form.Text className = \"confirmPass\">{this.state.errors.filingStatus}</Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formAnnualIncome\"  required>\r\n                    <Form.Label>Annual Income</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type = \"number\" min={0} name = \"annualIncome\" onChange = {this.handleChange} />\r\n                    </InputGroup>\r\n                    \r\n                    </Form.Group>               \r\n                </Form.Row></div>\r\n                : <div></div> }\r\n                \r\n                <Form.Group className = \"btn1\">\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Add User\r\n                    </Button>\r\n                    <Form.Text className = \"output\">{this.state.errors[\"output\"]}</Form.Text>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default AddUser;","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\AddExpense.js",["151","152"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport '../Styles/Custom.scss'\r\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport Navbar from './Navbar'\r\n\r\n\r\nclass AddExpense extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            added: false,\r\n            input: {userID: this.props.location.state[\"user\"]},\r\n            errors: {}\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount () {\r\n        let input = this.state.input\r\n        input[\"category\"] = document.getElementById(\"category\").value\r\n        this.setState({added: false, input:input, errors:this.state.errors})\r\n    }\r\n\r\n    handleChange(event) {\r\n        let input = this.state.input;\r\n        input[event.target.name] = event.target.value;\r\n      \r\n        this.setState({\r\n            added: false,\r\n            input:input,\r\n            errors: this.state.errors\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        let recurring = 0;\r\n        event.preventDefault();\r\n        if (this.validate()) {\r\n            if(document.getElementById(\"recurring\").checked){\r\n                recurring = 1;\r\n            }\r\n            axios.post(API_URL + '/expenses/added', {\r\n                userID: this.state.input.userID,\r\n                amount: this.state.input[\"amount\"],\r\n                category: this.state.input[\"category\"],\r\n                dateAdded: this.state.input[\"dateAdded\"],\r\n                expenseTitle: this.state.input[\"expenseTitle\"],\r\n                recurring: recurring\r\n            }).then((response) => {\r\n                this.setState ({added: true, errors : {output: response.data}})\r\n                }\r\n            )\r\n        }\r\n    } \r\n      \r\n        \r\n    validate() {\r\n        \r\n        let valid = true;\r\n        let input = this.state.input;\r\n        let errors = this.state.errors;\r\n        let dateAdded = new Date(input[\"dateAdded\"])\r\n        let today = new Date()\r\n        \r\n        // handling category \r\n        if(input[\"category\"] === \"\" || input[\"category\"] === null){\r\n            errors[\"category\"] = \"Please select a category.\"\r\n            valid = false;\r\n        }\r\n\r\n        //handling date error\r\n        if (dateAdded > today){\r\n            errors[\"dateError\"] = \"Date cannot be a future date.\"\r\n            valid = false;\r\n        }\r\n        else {\r\n            errors[\"dateError\"] = \"\"\r\n        }\r\n    \r\n        this.setState({errors:errors});\r\n        return valid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar user = {this.props.location.state[\"user\"]} userType = {this.props.location.state[\"userType\"]}/>\r\n                <div id=\"registerContainer\">\r\n                    <h1>Add an Expense</h1>\r\n                    <Form onSubmit = {this.handleSubmit}>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formExpenseTitle\">\r\n                                <Form.Label>Expense Title</Form.Label>\r\n                                <Form.Control type = \"text\" name = \"expenseTitle\" onChange = {this.handleChange} required/>\r\n                            </Form.Group>                    \r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formDate\">\r\n                                <Form.Label>Date</Form.Label>\r\n                                \r\n                                <Form.Control type = \"date\" name = \"dateAdded\"  onChange = {this.handleChange} required />\r\n                                <Form.Text>{this.state.errors.dateError}</Form.Text>     \r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formAmount\"  required>\r\n                            <Form.Label>Amount</Form.Label>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                <InputGroup.Text>$</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control type = \"number\" min={0} name = \"amount\" onChange = {this.handleChange} />\r\n                            </InputGroup>\r\n                            </Form.Group>    \r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formCategory\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control as=\"select\"  name = \"category\" id = \"category\" onChange = {this.handleChange} required>\r\n                                <option>Food</option>\r\n                                <option>Groceries</option>\r\n                                <option>Rent/Mortgage</option>\r\n                                <option>Gas</option>\r\n                                <option>Entertainment</option>\r\n                                <option>Utility</option>\r\n                                <option>Business</option>\r\n                                <option>Other</option>\r\n                            </Form.Control>\r\n                            <Form.Text>{this.state.errors.category}</Form.Text>\r\n                            </Form.Group>          \r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formRecurring\">\r\n                                <Form.Check inline label=\"Recurring\" id=\"recurring\"/>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Group className = \"btn1\">\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                            <Form.Text className = \"output\">{this.state.errors[\"output\"]}</Form.Text>\r\n                        </Form.Group>\r\n\r\n                    </Form>\r\n\r\n\r\n                </div>\r\n            </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default AddExpense;","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\EditUser.js",["153","154"],"import React, { Component } from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_URL_UPDATE_USER, API_URL_USERS } from '../config'\r\nimport Navbar from './Navbar'\r\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap'\r\nimport AdminNavbar from './AdminNavbar'\r\n\r\nexport default class EditUser extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            admin: this.props.location.state[\"admin\"],\r\n            user : {userID: this.props.location.state[\"user\"]},\r\n            userType: \"admin\",\r\n            errors: {}\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(API_URL_USERS + '/' + this.state.user[\"userID\"])\r\n        .then((response) => {\r\n            this.setState({user: response.data})\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        let user = this.state.user;\r\n        user[event.target.name] = event.target.value;\r\n        this.setState({user : user});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        if (this.validate()) {\r\n            event.preventDefault()\r\n\r\n            axios.post(API_URL_UPDATE_USER, {\r\n                userID: this.state.user[\"userID\"],\r\n                email: this.state.user[\"email\"],\r\n                password: this.state.user[\"password\"],\r\n                fname: this.state.user[\"fname\"],\r\n                lname: this.state.user[\"lname\"],\r\n                userType: this.state.user[\"userType\"],\r\n                dob: this.state.user[\"dob\"],\r\n                annIncome: this.state.user[\"annIncome\"],\r\n                filingStatus: this.state.user[\"filingStatus\"]\r\n            }).then((response) => {\r\n                let errors = this.state.errors\r\n                if (response.data === \"User updated\"){ \r\n                    errors[\"update\"] = \"Account successfully updated!\"\r\n                    this.setState({errors: errors})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    validate() {\r\n        let user = this.state.user\r\n        let valid = true\r\n        let errors = this.state.errors\r\n\r\n        if(user[\"password\"] !== user[\"confirmPassword\"]){\r\n                errors[\"confirmPassword\"] = \"Passwords don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmPassword\"] = \"\";\r\n        }\r\n        if(user[\"email\"] !== user[\"confirmEmail\"]){\r\n                errors[\"confirmEmail\"] = \"Emails don't match.\";\r\n                valid = false;\r\n        }\r\n        else {\r\n            errors[\"confirmEmail\"] = \"\";\r\n        }\r\n        if(user[\"filingStatus\"] === \"\" || user[\"filingStatus\"] === null){\r\n            errors[\"filingStatus\"] = \"Please select a filing status.\"\r\n            valid = false;\r\n        }\r\n    \r\n        this.setState({user: user, errors:errors});\r\n        return valid;\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <AdminNavbar user = {this.state.admin} userType = {this.state.userType}></AdminNavbar>\r\n                <h1>Edit User</h1>\r\n                <Form onSubmit = {this.handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFName\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"fname\" onChange = {this.handleChange} value = {this.state.user[\"fname\"]} required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridLName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control type=\"text\"  name = \"lname\" onChange = {this.handleChange} value = {this.state.user[\"lname\"]} required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formEmail\">\r\n                        <Form.Label>New Email Address</Form.Label>\r\n                        <Form.Control type = \"email\" name = \"email\" onChange = {this.handleChange} value = {this.state.user[\"email\"]} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors[\"confirmEmail\"]}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm New Email Address</Form.Label>\r\n                        <Form.Control type = \"email\"  name = \"confirmEmail\" onChange = {this.handleChange}  required/>\r\n                    </Form.Group>\r\n                    \r\n                </Form.Row>\r\n\r\n\r\n                \r\n\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formPassword\">\r\n                        <Form.Label>Change Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"password\" onChange = {this.handleChange} value = {this.state.user[\"password\"]} required/>\r\n                        <Form.Text className = \"confirmPass\">{this.state.errors[\"confirmPassword\"]}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formConfirmEmail\">\r\n                        <Form.Label>Confirm New Password</Form.Label>\r\n                        <Form.Control type = \"password\" name = \"confirmPassword\" onChange = {this.handleChange}   required/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                   \r\n                    <Form.Group as={Col} controlId=\"formFilingStatus\">\r\n                    <Form.Label>Filing Status</Form.Label>\r\n                    <Form.Control as=\"select\"  name = \"filingStatus\" id = \"filingStatus\" onChange = {this.handleChange} value = {this.state.user[\"filingStatus\"]} required>\r\n                        <option>Single</option>\r\n                        <option>Married filing jointly</option>\r\n                        <option>Married filing seperately</option>\r\n                        <option>Head of household</option>\r\n                    </Form.Control>\r\n                    \r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Col} controlId=\"formAnnualIncome\"  required>\r\n                    <Form.Label>Annual Income</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type = \"number\" min={0} name = \"annIncome\" onChange = {this.handleChange} value = {this.state.user[\"annIncome\"]}  />\r\n                    </InputGroup>\r\n                    \r\n                    </Form.Group> \r\n                </Form.Row>\r\n\r\n                <Form.Group className = \"btn1\">\r\n                    <Button variant=\"primary\" type=\"submit\" onclick={this.printTaxBracket}>\r\n                        Save Changes\r\n                    </Button>\r\n                    <Form.Text className = \"updateStatus\">{this.state.errors[\"update\"]}</Form.Text>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\ManageExpense.js",["155","156","157","158"],"import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {API_URL, API_URL_EXPENSES, API_URL_EXPENSE, API_URL_EXPENSE_DELETE } from '../config'\r\nimport {Table} from 'react-bootstrap'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport Navbar from './Navbar'\r\n\r\nclass ManageExpense extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userID: this.props.location.state[\"user\"],\r\n            userType: this.props.location.state[\"userType\"],\r\n            expenses: [{}]\r\n        }\r\n        this.getExpensesTable = this.getExpensesTable.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(API_URL_EXPENSE + \"/\" + this.state.userID)\r\n        .then((response) => {\r\n            this.setState({\r\n                expenses: response.data})\r\n            })\r\n    }\r\n\r\n    handleDelete(index) {\r\n        let expenseID = document.getElementById(\"expenseID\" + index).innerHTML\r\n        axios.delete(API_URL_EXPENSE_DELETE + '/' + expenseID)\r\n        .then((response) => {\r\n            //update expenses table\r\n            axios.get(API_URL_EXPENSE + \"/\" + this.state.userID)\r\n                .then((response) => {   \r\n                    this.setState({\r\n                        expenses: response.data\r\n                    })       \r\n                    console.log(response.data)\r\n                })\r\n        })\r\n    }\r\n\r\n    handleEdit(index) {\r\n        let expenseID = document.getElementById(\"expenseID\" + index).innerHTML\r\n        console.log(\"editting \" + expenseID);\r\n        this.props.history.push({pathname: '/EditExpense', state: {expenseID: expenseID, userID: this.state.userID, userType: this.state.userType}})\r\n    }\r\n\r\n    getExpensesTable() {\r\n            return (\r\n                <div>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ExpenseID</th>\r\n                                <th>Expense Title</th>\r\n                                <th>Date added</th>\r\n                                <th>Amount</th>\r\n                                <th>Category</th>\r\n                                <th></th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {(this.state.expenses).map((element, index) => {\r\n                            return(\r\n                            <tr id = {\"row\" + index}>\r\n                                <td id = {\"expenseID\" + index}>{element.expenseID}</td>\r\n                                <td>{element.expenseTitle}</td>                                        <td>{element.dateAdded}</td>\r\n                                <td>{element.amount}</td>\r\n                                <td>{element.category}</td>\r\n                                <td><button type=\"button\" name=\"\" id=\"\" class=\"btn btn-primary\" btn-lg btn-block onClick = {() => this.handleEdit(index)}>Edit</button></td>\r\n                                <td><button type=\"button\" name=\"\" id=\"\" class=\"btn btn-primary\" btn-lg btn-block onClick = {() => this.handleDelete(index)}>Delete</button></td>\r\n                            </tr>\r\n                            )})}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                )\r\n            }\r\n    \r\n\r\n\r\n    render() {\r\n        const table =  this.getExpensesTable()\r\n        return (\r\n            <div>\r\n                <Navbar user = {this.state.userID} userType = {\"customer\"}/>\r\n                <h2>Expenses List</h2>\r\n                {table}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManageExpense","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\EditExpense.js",["159"],"import React, { Component } from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { API_URL_UPDATE_EXPENSE, API_URL_EXPENSES } from '../config'\r\nimport Navbar from './Navbar'\r\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap'\r\n\r\nexport default class EditExpense extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userID: this.props.location.state[\"userID\"],\r\n            userType: this.props.location.state[\"userType\"],\r\n            input: {},\r\n            errors: {}\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state)\r\n        console.log(API_URL_EXPENSES + '/' + this.props.location.state[\"expenseID\"])\r\n        axios.get(API_URL_EXPENSES + '/' + this.props.location.state[\"expenseID\"])\r\n        .then((response) => {\r\n            this.setState({input: response.data})\r\n            console.log(this.state.input)\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        let input = this.state.input;\r\n        input[event.target.name] = event.target.value;\r\n      \r\n        this.setState({\r\n            input: input\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        console.log(this.state.input)\r\n        if (this.validate()) {\r\n            event.preventDefault()\r\n\r\n            axios.post(API_URL_UPDATE_EXPENSE, {\r\n                expenseID: this.state.input[\"expenseID\"],\r\n                userID: this.state.input[\"userID\"],\r\n                amount: this.state.input[\"amount\"],\r\n                category: this.state.input[\"category\"],\r\n                dateAdded: this.state.input[\"dateAdded\"],\r\n                expenseTitle: this.state.input[\"expenseTitle\"],\r\n            }).then((response) => {\r\n                let errors = this.state.errors\r\n                if (response.data === \"Expense updated\"){ \r\n                    errors[\"output\"] = \"Expense successfully updated!\"\r\n                    this.setState({errors: errors})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    validate() {\r\n        let valid = true;\r\n        let errors = {};\r\n        let input = this.state.input;\r\n        let dateAdded = new Date(input[\"dateAdded\"])\r\n        let today = new Date()\r\n        \r\n        // handling category \r\n        if(input[\"category\"] === \"\" || input[\"category\"] === null){\r\n            errors[\"category\"] = \"Please select a category.\"\r\n            valid = false;\r\n        }\r\n\r\n        //handling date error\r\n        if (dateAdded > today){\r\n            errors[\"dateError\"] = \"Date cannot be a future date.\"\r\n            valid = false;\r\n        }\r\n        else {\r\n            errors[\"dateError\"] = \"\"\r\n        }\r\n    \r\n        this.setState({ errors:errors});\r\n        return valid;\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Navbar user = {this.state.userID} userType = {this.state.userType}/>\r\n            <div id=\"registerContainer\">\r\n            {/* {this.state.added && (<Redirect to=\"/AddExpense/Success\"/>)} */}\r\n                <h1>Edit Expense {this.state.input.expenseID}</h1>\r\n                <Form onSubmit = {this.handleSubmit}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formExpenseTitle\">\r\n                            <Form.Label>Expense Title</Form.Label>\r\n                            <Form.Control type = \"text\" name = \"expenseTitle\" value = {this.state.input[\"expenseTitle\"]} onChange = {this.handleChange} required/>\r\n                        </Form.Group>                    \r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formDate\">\r\n                            <Form.Label>Date</Form.Label>\r\n                            \r\n                            <Form.Control type = \"date\" name = \"dateAdded\" value = {this.state.input[\"dateAdded\"]} onChange = {this.handleChange} required />\r\n                            <Form.Text>{this.state.errors.dateError}</Form.Text>     \r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formAmount\"  required>\r\n                        <Form.Label>Amount</Form.Label>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control type = \"number\" min={0} name = \"amount\" value = {this.state.input[\"amount\"]} onChange = {this.handleChange} />\r\n                        </InputGroup>\r\n                        </Form.Group>    \r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formCategory\">\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control as=\"select\"  name = \"category\" id = \"category\" value = {this.state.input[\"category\"]} onChange = {this.handleChange} required>\r\n                            <option>Food</option>\r\n                            <option>Groceries</option>\r\n                            <option>Rent/Mortgage</option>\r\n                            <option>Gas</option>\r\n                            <option>Entertainment</option>\r\n                            <option>Utility</option>\r\n                            <option>Business</option>\r\n                            <option>Other</option>\r\n                        </Form.Control>\r\n                        <Form.Text>{this.state.errors.category}</Form.Text>\r\n                        </Form.Group>          \r\n                    </Form.Row>\r\n\r\n                    <Form.Group className = \"btn1\">\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                        <Form.Text className = \"output\">{this.state.errors[\"output\"]}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n\r\n            </div>\r\n        </div>    \r\n        )\r\n    }\r\n}\r\n\r\n\r\n//export default EditExpense;\r\n","C:\\Users\\black\\Documents\\SoftwareEngineering\\master\\src\\Components\\CompareExpense.js",["160","161","162","163","164","165","166","167","168","169","170","171"],{"ruleId":"172","severity":1,"message":"173","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":13},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"172","severity":1,"message":"180","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":16},{"ruleId":"172","severity":1,"message":"181","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":12},{"ruleId":"172","severity":1,"message":"182","line":3,"column":16,"nodeType":"174","messageId":"175","endLine":3,"endColumn":24},{"ruleId":"172","severity":1,"message":"183","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":13},{"ruleId":"172","severity":1,"message":"184","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":16},{"ruleId":"172","severity":1,"message":"180","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":16},{"ruleId":"172","severity":1,"message":"181","line":8,"column":9,"nodeType":"174","messageId":"175","endLine":8,"endColumn":13},{"ruleId":"172","severity":1,"message":"182","line":8,"column":15,"nodeType":"174","messageId":"175","endLine":8,"endColumn":23},{"ruleId":"185","severity":1,"message":"186","line":148,"column":23,"nodeType":"187","messageId":"188","endLine":148,"endColumn":25},{"ruleId":"185","severity":1,"message":"186","line":149,"column":23,"nodeType":"187","messageId":"188","endLine":149,"endColumn":25},{"ruleId":"185","severity":1,"message":"186","line":150,"column":32,"nodeType":"187","messageId":"188","endLine":150,"endColumn":34},{"ruleId":"185","severity":1,"message":"186","line":151,"column":26,"nodeType":"187","messageId":"188","endLine":151,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":152,"column":28,"nodeType":"187","messageId":"188","endLine":152,"endColumn":30},{"ruleId":"185","severity":1,"message":"186","line":153,"column":27,"nodeType":"187","messageId":"188","endLine":153,"endColumn":29},{"ruleId":"185","severity":1,"message":"186","line":154,"column":24,"nodeType":"187","messageId":"188","endLine":154,"endColumn":26},{"ruleId":"185","severity":1,"message":"189","line":160,"column":39,"nodeType":"187","messageId":"188","endLine":160,"endColumn":41},{"ruleId":"185","severity":1,"message":"189","line":199,"column":39,"nodeType":"187","messageId":"188","endLine":199,"endColumn":41},{"ruleId":"190","severity":1,"message":"191","line":256,"column":12,"nodeType":"192","messageId":"193","endLine":256,"endColumn":43},{"ruleId":"190","severity":1,"message":"191","line":279,"column":17,"nodeType":"192","messageId":"193","endLine":279,"endColumn":64},{"ruleId":"190","severity":1,"message":"191","line":302,"column":17,"nodeType":"192","messageId":"193","endLine":302,"endColumn":67},{"ruleId":"172","severity":1,"message":"194","line":341,"column":13,"nodeType":"174","messageId":"175","endLine":341,"endColumn":32},{"ruleId":"172","severity":1,"message":"195","line":360,"column":15,"nodeType":"174","messageId":"175","endLine":360,"endColumn":19},{"ruleId":"172","severity":1,"message":"196","line":361,"column":15,"nodeType":"174","messageId":"175","endLine":361,"endColumn":25},{"ruleId":"197","severity":1,"message":"198","line":380,"column":25,"nodeType":"199","endLine":380,"endColumn":29},{"ruleId":"172","severity":1,"message":"180","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":55,"column":21,"nodeType":"202","endLine":55,"endColumn":38},{"ruleId":"172","severity":1,"message":"203","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":17},{"ruleId":"172","severity":1,"message":"204","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":14},{"ruleId":"172","severity":1,"message":"205","line":17,"column":9,"nodeType":"174","messageId":"175","endLine":17,"endColumn":15},{"ruleId":"172","severity":1,"message":"206","line":36,"column":15,"nodeType":"174","messageId":"175","endLine":36,"endColumn":26},{"ruleId":"207","severity":1,"message":"208","line":13,"column":5,"nodeType":"209","messageId":"210","endLine":15,"endColumn":6},{"ruleId":"211","severity":1,"message":"212","line":25,"column":25,"nodeType":"199","endLine":25,"endColumn":76},{"ruleId":"213","severity":1,"message":"214","line":26,"column":21,"nodeType":"199","endLine":26,"endColumn":76},{"ruleId":"211","severity":1,"message":"212","line":34,"column":29,"nodeType":"199","endLine":34,"endColumn":76},{"ruleId":"213","severity":1,"message":"214","line":35,"column":29,"nodeType":"199","endLine":35,"endColumn":83},{"ruleId":"211","severity":1,"message":"212","line":40,"column":29,"nodeType":"199","endLine":40,"endColumn":76},{"ruleId":"213","severity":1,"message":"214","line":41,"column":29,"nodeType":"199","endLine":41,"endColumn":83},{"ruleId":"211","severity":1,"message":"212","line":47,"column":29,"nodeType":"199","endLine":47,"endColumn":76},{"ruleId":"213","severity":1,"message":"214","line":48,"column":29,"nodeType":"199","endLine":48,"endColumn":86},{"ruleId":"211","severity":1,"message":"212","line":54,"column":33,"nodeType":"199","endLine":54,"endColumn":82},{"ruleId":"213","severity":1,"message":"214","line":55,"column":48,"nodeType":"199","endLine":55,"endColumn":105},{"ruleId":"211","severity":1,"message":"212","line":62,"column":33,"nodeType":"199","endLine":62,"endColumn":89},{"ruleId":"213","severity":1,"message":"214","line":63,"column":47,"nodeType":"199","endLine":63,"endColumn":103},{"ruleId":"172","severity":1,"message":"215","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":18},{"ruleId":"207","severity":1,"message":"208","line":11,"column":5,"nodeType":"209","messageId":"210","endLine":13,"endColumn":6},{"ruleId":"211","severity":1,"message":"212","line":22,"column":25,"nodeType":"199","endLine":22,"endColumn":76},{"ruleId":"213","severity":1,"message":"214","line":23,"column":25,"nodeType":"199","endLine":23,"endColumn":80},{"ruleId":"211","severity":1,"message":"212","line":31,"column":37,"nodeType":"199","endLine":31,"endColumn":86},{"ruleId":"213","severity":1,"message":"214","line":32,"column":53,"nodeType":"199","endLine":32,"endColumn":107},{"ruleId":"211","severity":1,"message":"212","line":38,"column":37,"nodeType":"199","endLine":38,"endColumn":86},{"ruleId":"213","severity":1,"message":"214","line":39,"column":52,"nodeType":"199","endLine":39,"endColumn":109},{"ruleId":"211","severity":1,"message":"212","line":46,"column":33,"nodeType":"199","endLine":46,"endColumn":89},{"ruleId":"213","severity":1,"message":"214","line":47,"column":47,"nodeType":"199","endLine":47,"endColumn":103},{"ruleId":"172","severity":1,"message":"180","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":16},{"ruleId":"172","severity":1,"message":"182","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":18},{"ruleId":"172","severity":1,"message":"216","line":9,"column":10,"nodeType":"174","messageId":"175","endLine":9,"endColumn":23},{"ruleId":"200","severity":1,"message":"201","line":57,"column":25,"nodeType":"202","endLine":57,"endColumn":42},{"ruleId":"200","severity":1,"message":"201","line":58,"column":25,"nodeType":"202","endLine":58,"endColumn":42},{"ruleId":"200","severity":1,"message":"201","line":85,"column":25,"nodeType":"202","endLine":85,"endColumn":42},{"ruleId":"200","severity":1,"message":"201","line":86,"column":25,"nodeType":"202","endLine":86,"endColumn":42},{"ruleId":"172","severity":1,"message":"180","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":16},{"ruleId":"172","severity":1,"message":"182","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":18},{"ruleId":"172","severity":1,"message":"215","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":18},{"ruleId":"172","severity":1,"message":"204","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":14},{"ruleId":"172","severity":1,"message":"217","line":3,"column":9,"nodeType":"174","messageId":"175","endLine":3,"endColumn":16},{"ruleId":"172","severity":1,"message":"218","line":3,"column":18,"nodeType":"174","messageId":"175","endLine":3,"endColumn":34},{"ruleId":"172","severity":1,"message":"181","line":5,"column":9,"nodeType":"174","messageId":"175","endLine":5,"endColumn":13},{"ruleId":"172","severity":1,"message":"182","line":5,"column":15,"nodeType":"174","messageId":"175","endLine":5,"endColumn":23},{"ruleId":"172","severity":1,"message":"215","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":64,"column":23,"nodeType":"187","messageId":"188","endLine":64,"endColumn":25},{"ruleId":"185","severity":1,"message":"186","line":65,"column":23,"nodeType":"187","messageId":"188","endLine":65,"endColumn":25},{"ruleId":"185","severity":1,"message":"186","line":66,"column":32,"nodeType":"187","messageId":"188","endLine":66,"endColumn":34},{"ruleId":"185","severity":1,"message":"186","line":67,"column":26,"nodeType":"187","messageId":"188","endLine":67,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":68,"column":28,"nodeType":"187","messageId":"188","endLine":68,"endColumn":30},{"ruleId":"185","severity":1,"message":"186","line":69,"column":27,"nodeType":"187","messageId":"188","endLine":69,"endColumn":29},{"ruleId":"185","severity":1,"message":"186","line":70,"column":24,"nodeType":"187","messageId":"188","endLine":70,"endColumn":26},{"ruleId":"185","severity":1,"message":"189","line":76,"column":28,"nodeType":"187","messageId":"188","endLine":76,"endColumn":30},{"ruleId":"185","severity":1,"message":"189","line":114,"column":28,"nodeType":"187","messageId":"188","endLine":114,"endColumn":30},{"ruleId":"185","severity":1,"message":"189","line":152,"column":31,"nodeType":"187","messageId":"188","endLine":152,"endColumn":33},{"ruleId":"185","severity":1,"message":"189","line":166,"column":31,"nodeType":"187","messageId":"188","endLine":166,"endColumn":33},{"ruleId":"172","severity":1,"message":"195","line":187,"column":13,"nodeType":"174","messageId":"175","endLine":187,"endColumn":17},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","no-native-reassign",["219"],"no-negated-in-lhs",["220"],"'ReactDOM' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'axios' is defined but never used.","'Register' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'tax_brack_statement' is assigned a value but never used.","'date' is assigned a value but never used.","'monthNames' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Dashboard' is defined but never used.","'Navbar' is defined but never used.","'logout' is assigned a value but never used.","'newLoggedIn' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'ThemeConsumer' is defined but never used.","'API_URL' is defined but never used.","'API_URL_EXPENSES' is defined but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> ab8e1bb339b5a56048dc994999eafa96ded143f9
